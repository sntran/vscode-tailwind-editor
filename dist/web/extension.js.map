{
  "version": 3,
  "sources": ["../../node_modules/@xmldom/xmldom/lib/conventions.js", "../../node_modules/@xmldom/xmldom/lib/dom.js", "../../node_modules/@xmldom/xmldom/lib/entities.js", "../../node_modules/@xmldom/xmldom/lib/sax.js", "../../node_modules/@xmldom/xmldom/lib/dom-parser.js", "../../node_modules/@xmldom/xmldom/lib/index.js", "../../node_modules/xpath/xpath.js", "../../src/web/extension.ts", "../../src/web/editor.ts", "../../src/web/util.ts", "../../src/web/styleEditor.ts"],
  "sourcesContent": ["'use strict'\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n", "var conventions = require(\"./conventions\");\n\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tdest[p] = src[p];\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0, \n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long \n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index. \n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t}\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities \n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t\t\n\t\t\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\t\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises \n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises \n\t\tthis.insertBefore(newChild,oldChild);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n    \t\t\t\tif(map[n] == namespaceURI){\n    \t\t\t\t\treturn n;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(prefix in map){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n/**\n * preformance key(refChild == null)\n */\nfunction _insertBefore(parentNode,newChild,nextChild){\n\tvar cp = newChild.parentNode;\n\tif(cp){\n\t\tcp.removeChild(newChild);//remove and update\n\t}\n\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = newChild.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn newChild;\n\t\t}\n\t\tvar newLast = newChild.lastChild;\n\t}else{\n\t\tnewFirst = newLast = newChild;\n\t}\n\tvar pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = nextChild;\n\t\n\t\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparentNode.firstChild = newFirst;\n\t}\n\tif(nextChild == null){\n\t\tparentNode.lastChild = newLast;\n\t}else{\n\t\tnextChild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parentNode;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);\n\t//console.log(parentNode.lastChild.nextSibling == null)\n\tif (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnewChild.firstChild = newChild.lastChild = null;\n\t}\n\treturn newChild;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\tif(this.documentElement == null && newChild.nodeType == ELEMENT_NODE){\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn _insertBefore(this,newChild,refChild),(newChild.ownerDocument = this),newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\t\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\t\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\t\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t\t\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\t\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\t\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\t\n\tvar i = visibleNamespaces.length \n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\t\t\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\t\t\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\t\t\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&]/g,_xmlEncoder)\n\t\t\t.replace(/]]>/g, ']]&gt;')\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE\uFF1A\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor(var n in node){\n\t\tvar v = node[n];\n\t\tif(typeof v != 'object' ){\n\t\t\tif(v != node2[n]){\n\t\t\t\tnode2[n] = v;\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n", "var freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({amp:'&', apos:\"'\", gt:'>', lt:'<', quot:'\"'})\n\n/**\n * A map of currently 241 entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n       lt: '<',\n       gt: '>',\n       amp: '&',\n       quot: '\"',\n       apos: \"'\",\n       Agrave: \"\u00C0\",\n       Aacute: \"\u00C1\",\n       Acirc: \"\u00C2\",\n       Atilde: \"\u00C3\",\n       Auml: \"\u00C4\",\n       Aring: \"\u00C5\",\n       AElig: \"\u00C6\",\n       Ccedil: \"\u00C7\",\n       Egrave: \"\u00C8\",\n       Eacute: \"\u00C9\",\n       Ecirc: \"\u00CA\",\n       Euml: \"\u00CB\",\n       Igrave: \"\u00CC\",\n       Iacute: \"\u00CD\",\n       Icirc: \"\u00CE\",\n       Iuml: \"\u00CF\",\n       ETH: \"\u00D0\",\n       Ntilde: \"\u00D1\",\n       Ograve: \"\u00D2\",\n       Oacute: \"\u00D3\",\n       Ocirc: \"\u00D4\",\n       Otilde: \"\u00D5\",\n       Ouml: \"\u00D6\",\n       Oslash: \"\u00D8\",\n       Ugrave: \"\u00D9\",\n       Uacute: \"\u00DA\",\n       Ucirc: \"\u00DB\",\n       Uuml: \"\u00DC\",\n       Yacute: \"\u00DD\",\n       THORN: \"\u00DE\",\n       szlig: \"\u00DF\",\n       agrave: \"\u00E0\",\n       aacute: \"\u00E1\",\n       acirc: \"\u00E2\",\n       atilde: \"\u00E3\",\n       auml: \"\u00E4\",\n       aring: \"\u00E5\",\n       aelig: \"\u00E6\",\n       ccedil: \"\u00E7\",\n       egrave: \"\u00E8\",\n       eacute: \"\u00E9\",\n       ecirc: \"\u00EA\",\n       euml: \"\u00EB\",\n       igrave: \"\u00EC\",\n       iacute: \"\u00ED\",\n       icirc: \"\u00EE\",\n       iuml: \"\u00EF\",\n       eth: \"\u00F0\",\n       ntilde: \"\u00F1\",\n       ograve: \"\u00F2\",\n       oacute: \"\u00F3\",\n       ocirc: \"\u00F4\",\n       otilde: \"\u00F5\",\n       ouml: \"\u00F6\",\n       oslash: \"\u00F8\",\n       ugrave: \"\u00F9\",\n       uacute: \"\u00FA\",\n       ucirc: \"\u00FB\",\n       uuml: \"\u00FC\",\n       yacute: \"\u00FD\",\n       thorn: \"\u00FE\",\n       yuml: \"\u00FF\",\n       nbsp: \"\\u00a0\",\n       iexcl: \"\u00A1\",\n       cent: \"\u00A2\",\n       pound: \"\u00A3\",\n       curren: \"\u00A4\",\n       yen: \"\u00A5\",\n       brvbar: \"\u00A6\",\n       sect: \"\u00A7\",\n       uml: \"\u00A8\",\n       copy: \"\u00A9\",\n       ordf: \"\u00AA\",\n       laquo: \"\u00AB\",\n       not: \"\u00AC\",\n       shy: \"\u00AD\u00AD\",\n       reg: \"\u00AE\",\n       macr: \"\u00AF\",\n       deg: \"\u00B0\",\n       plusmn: \"\u00B1\",\n       sup2: \"\u00B2\",\n       sup3: \"\u00B3\",\n       acute: \"\u00B4\",\n       micro: \"\u00B5\",\n       para: \"\u00B6\",\n       middot: \"\u00B7\",\n       cedil: \"\u00B8\",\n       sup1: \"\u00B9\",\n       ordm: \"\u00BA\",\n       raquo: \"\u00BB\",\n       frac14: \"\u00BC\",\n       frac12: \"\u00BD\",\n       frac34: \"\u00BE\",\n       iquest: \"\u00BF\",\n       times: \"\u00D7\",\n       divide: \"\u00F7\",\n       forall: \"\u2200\",\n       part: \"\u2202\",\n       exist: \"\u2203\",\n       empty: \"\u2205\",\n       nabla: \"\u2207\",\n       isin: \"\u2208\",\n       notin: \"\u2209\",\n       ni: \"\u220B\",\n       prod: \"\u220F\",\n       sum: \"\u2211\",\n       minus: \"\u2212\",\n       lowast: \"\u2217\",\n       radic: \"\u221A\",\n       prop: \"\u221D\",\n       infin: \"\u221E\",\n       ang: \"\u2220\",\n       and: \"\u2227\",\n       or: \"\u2228\",\n       cap: \"\u2229\",\n       cup: \"\u222A\",\n       'int': \"\u222B\",\n       there4: \"\u2234\",\n       sim: \"\u223C\",\n       cong: \"\u2245\",\n       asymp: \"\u2248\",\n       ne: \"\u2260\",\n       equiv: \"\u2261\",\n       le: \"\u2264\",\n       ge: \"\u2265\",\n       sub: \"\u2282\",\n       sup: \"\u2283\",\n       nsub: \"\u2284\",\n       sube: \"\u2286\",\n       supe: \"\u2287\",\n       oplus: \"\u2295\",\n       otimes: \"\u2297\",\n       perp: \"\u22A5\",\n       sdot: \"\u22C5\",\n       Alpha: \"\u0391\",\n       Beta: \"\u0392\",\n       Gamma: \"\u0393\",\n       Delta: \"\u0394\",\n       Epsilon: \"\u0395\",\n       Zeta: \"\u0396\",\n       Eta: \"\u0397\",\n       Theta: \"\u0398\",\n       Iota: \"\u0399\",\n       Kappa: \"\u039A\",\n       Lambda: \"\u039B\",\n       Mu: \"\u039C\",\n       Nu: \"\u039D\",\n       Xi: \"\u039E\",\n       Omicron: \"\u039F\",\n       Pi: \"\u03A0\",\n       Rho: \"\u03A1\",\n       Sigma: \"\u03A3\",\n       Tau: \"\u03A4\",\n       Upsilon: \"\u03A5\",\n       Phi: \"\u03A6\",\n       Chi: \"\u03A7\",\n       Psi: \"\u03A8\",\n       Omega: \"\u03A9\",\n       alpha: \"\u03B1\",\n       beta: \"\u03B2\",\n       gamma: \"\u03B3\",\n       delta: \"\u03B4\",\n       epsilon: \"\u03B5\",\n       zeta: \"\u03B6\",\n       eta: \"\u03B7\",\n       theta: \"\u03B8\",\n       iota: \"\u03B9\",\n       kappa: \"\u03BA\",\n       lambda: \"\u03BB\",\n       mu: \"\u03BC\",\n       nu: \"\u03BD\",\n       xi: \"\u03BE\",\n       omicron: \"\u03BF\",\n       pi: \"\u03C0\",\n       rho: \"\u03C1\",\n       sigmaf: \"\u03C2\",\n       sigma: \"\u03C3\",\n       tau: \"\u03C4\",\n       upsilon: \"\u03C5\",\n       phi: \"\u03C6\",\n       chi: \"\u03C7\",\n       psi: \"\u03C8\",\n       omega: \"\u03C9\",\n       thetasym: \"\u03D1\",\n       upsih: \"\u03D2\",\n       piv: \"\u03D6\",\n       OElig: \"\u0152\",\n       oelig: \"\u0153\",\n       Scaron: \"\u0160\",\n       scaron: \"\u0161\",\n       Yuml: \"\u0178\",\n       fnof: \"\u0192\",\n       circ: \"\u02C6\",\n       tilde: \"\u02DC\",\n       ensp: \"\u2002\",\n       emsp: \"\u2003\",\n       thinsp: \"\u2009\",\n       zwnj: \"\u200C\",\n       zwj: \"\u200D\",\n       lrm: \"\u200E\",\n       rlm: \"\u200F\",\n       ndash: \"\u2013\",\n       mdash: \"\u2014\",\n       lsquo: \"\u2018\",\n       rsquo: \"\u2019\",\n       sbquo: \"\u201A\",\n       ldquo: \"\u201C\",\n       rdquo: \"\u201D\",\n       bdquo: \"\u201E\",\n       dagger: \"\u2020\",\n       Dagger: \"\u2021\",\n       bull: \"\u2022\",\n       hellip: \"\u2026\",\n       permil: \"\u2030\",\n       prime: \"\u2032\",\n       Prime: \"\u2033\",\n       lsaquo: \"\u2039\",\n       rsaquo: \"\u203A\",\n       oline: \"\u203E\",\n       euro: \"\u20AC\",\n       trade: \"\u2122\",\n       larr: \"\u2190\",\n       uarr: \"\u2191\",\n       rarr: \"\u2192\",\n       darr: \"\u2193\",\n       harr: \"\u2194\",\n       crarr: \"\u21B5\",\n       lceil: \"\u2308\",\n       rceil: \"\u2309\",\n       lfloor: \"\u230A\",\n       rfloor: \"\u230B\",\n       loz: \"\u25CA\",\n       spades: \"\u2660\",\n       clubs: \"\u2663\",\n       hearts: \"\u2665\",\n       diams: \"\u2666\"\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES\n", "var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor(var prefix in localNSMap){\n\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix) ;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: \u8FD9\u91CC\u6709\u53EF\u80FDsax\u56DE\u9000\uFF0C\u6709\u4F4D\u7F6E\u9519\u8BEF\u98CE\u9669\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor(prefix in localNSMap){\n\t\t\t\tdomBuilder.endPrefixMapping(prefix)\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//\u5FD8\u8BB0\u95ED\u5408\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\nfunction _copy(source,target){\n\tfor(var n in source){target[n] = source[n]}\n}\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n", "var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n", "var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n", "/*\r\n * xpath.js\r\n *\r\n * An XPath 1.0 library for JavaScript.\r\n *\r\n * Cameron McCormack <cam (at) mcc.id.au>\r\n *\r\n * This work is licensed under the MIT License.\r\n *\r\n * Revision 20: April 26, 2011\r\n *   Fixed a typo resulting in FIRST_ORDERED_NODE_TYPE results being wrong,\r\n *   thanks to <shi_a009 (at) hotmail.com>.\r\n *\r\n * Revision 19: November 29, 2005\r\n *   Nodesets now store their nodes in a height balanced tree, increasing\r\n *   performance for the common case of selecting nodes in document order,\r\n *   thanks to S\u00E9bastien Cramatte <contact (at) zeninteractif.com>.\r\n *   AVL tree code adapted from Raimund Neumann <rnova (at) gmx.net>.\r\n *\r\n * Revision 18: October 27, 2005\r\n *   DOM 3 XPath support.  Caveats:\r\n *     - namespace prefixes aren't resolved in XPathEvaluator.createExpression,\r\n *       but in XPathExpression.evaluate.\r\n *     - XPathResult.invalidIteratorState is not implemented.\r\n *\r\n * Revision 17: October 25, 2005\r\n *   Some core XPath function fixes and a patch to avoid crashing certain\r\n *   versions of MSXML in PathExpr.prototype.getOwnerElement, thanks to\r\n *   S\u00E9bastien Cramatte <contact (at) zeninteractif.com>.\r\n *\r\n * Revision 16: September 22, 2005\r\n *   Workarounds for some IE 5.5 deficiencies.\r\n *   Fixed problem with prefix node tests on attribute nodes.\r\n *\r\n * Revision 15: May 21, 2005\r\n *   Fixed problem with QName node tests on elements with an xmlns=\"...\".\r\n *\r\n * Revision 14: May 19, 2005\r\n *   Fixed QName node tests on attribute node regression.\r\n *\r\n * Revision 13: May 3, 2005\r\n *   Node tests are case insensitive now if working in an HTML DOM.\r\n *\r\n * Revision 12: April 26, 2005\r\n *   Updated licence.  Slight code changes to enable use of Dean\r\n *   Edwards' script compression, http://dean.edwards.name/packer/ .\r\n *\r\n * Revision 11: April 23, 2005\r\n *   Fixed bug with 'and' and 'or' operators, fix thanks to\r\n *   Sandy McArthur <sandy (at) mcarthur.org>.\r\n *\r\n * Revision 10: April 15, 2005\r\n *   Added support for a virtual root node, supposedly helpful for\r\n *   implementing XForms.  Fixed problem with QName node tests and\r\n *   the parent axis.\r\n *\r\n * Revision 9: March 17, 2005\r\n *   Namespace resolver tweaked so using the document node as the context\r\n *   for namespace lookups is equivalent to using the document element.\r\n *\r\n * Revision 8: February 13, 2005\r\n *   Handle implicit declaration of 'xmlns' namespace prefix.\r\n *   Fixed bug when comparing nodesets.\r\n *   Instance data can now be associated with a FunctionResolver, and\r\n *     workaround for MSXML not supporting 'localName' and 'getElementById',\r\n *     thanks to Grant Gongaware.\r\n *   Fix a few problems when the context node is the root node.\r\n *\r\n * Revision 7: February 11, 2005\r\n *   Default namespace resolver fix from Grant Gongaware\r\n *   <grant (at) gongaware.com>.\r\n *\r\n * Revision 6: February 10, 2005\r\n *   Fixed bug in 'number' function.\r\n *\r\n * Revision 5: February 9, 2005\r\n *   Fixed bug where text nodes not getting converted to string values.\r\n *\r\n * Revision 4: January 21, 2005\r\n *   Bug in 'name' function, fix thanks to Bill Edney.\r\n *   Fixed incorrect processing of namespace nodes.\r\n *   Fixed NamespaceResolver to resolve 'xml' namespace.\r\n *   Implemented union '|' operator.\r\n *\r\n * Revision 3: January 14, 2005\r\n *   Fixed bug with nodeset comparisons, bug lexing < and >.\r\n *\r\n * Revision 2: October 26, 2004\r\n *   QName node test namespace handling fixed.  Few other bug fixes.\r\n *\r\n * Revision 1: August 13, 2004\r\n *   Bug fixes from William J. Edney <bedney (at) technicalpursuit.com>.\r\n *   Added minimal licence.\r\n *\r\n * Initial version: June 14, 2004\r\n */\r\n\r\n// non-node wrapper\r\nvar xpath = (typeof exports === 'undefined') ? {} : exports;\r\n\r\n(function (exports) {\r\n    \"use strict\";\r\n\r\n    // functional helpers\r\n    function curry(func) {\r\n        var slice = Array.prototype.slice,\r\n            totalargs = func.length,\r\n            partial = function (args, fn) {\r\n                return function () {\r\n                    return fn.apply(this, args.concat(slice.call(arguments)));\r\n                }\r\n            },\r\n            fn = function () {\r\n                var args = slice.call(arguments);\r\n                return (args.length < totalargs) ?\r\n                    partial(args, fn) :\r\n                    func.apply(this, slice.apply(arguments, [0, totalargs]));\r\n            };\r\n        return fn;\r\n    }\r\n\r\n    var forEach = function (f, xs) {\r\n        for (var i = 0; i < xs.length; i += 1) {\r\n            f(xs[i], i, xs);\r\n        }\r\n    };\r\n\r\n    var reduce = function (f, seed, xs) {\r\n        var acc = seed;\r\n\r\n        forEach(function (x, i) { acc = f(acc, x, i); }, xs);\r\n\r\n        return acc;\r\n    };\r\n\r\n    var map = function (f, xs) {\r\n        var mapped = new Array(xs.length);\r\n\r\n        forEach(function (x, i) { mapped[i] = f(x); }, xs);\r\n\r\n        return mapped;\r\n    };\r\n\r\n    var filter = function (f, xs) {\r\n        var filtered = [];\r\n\r\n        forEach(function (x, i) { if (f(x, i)) { filtered.push(x); } }, xs);\r\n\r\n        return filtered;\r\n    };\r\n\r\n    var includes = function (values, value) {\r\n        for (var i = 0; i < values.length; i += 1) {\r\n            if (values[i] === value) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    function always(value) { return function () { return value; } }\r\n\r\n    function toString(x) { return x.toString(); }\r\n    var join = function (s, xs) { return xs.join(s); };\r\n    var wrap = function (pref, suf, str) { return pref + str + suf; };\r\n\r\n    var prototypeConcat = Array.prototype.concat;\r\n\r\n    // .apply() fails above a certain number of arguments - https://github.com/goto100/xpath/pull/98\r\n    var MAX_ARGUMENT_LENGTH = 32767;\r\n\r\n    function flatten(arr) {\r\n        var result = [];\r\n\r\n        for (var start = 0; start < arr.length; start += MAX_ARGUMENT_LENGTH) {\r\n            var chunk = arr.slice(start, start + MAX_ARGUMENT_LENGTH);\r\n            \r\n            result = prototypeConcat.apply(result, chunk);\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    function assign(target, varArgs) { // .length of function is 2\r\n        var to = Object(target);\r\n\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var nextSource = arguments[index];\r\n\r\n            if (nextSource != null) { // Skip over if undefined or null\r\n                for (var nextKey in nextSource) {\r\n                    // Avoid bugs when hasOwnProperty is shadowed\r\n                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                        to[nextKey] = nextSource[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return to;\r\n    }\r\n\r\n    // XPathParser ///////////////////////////////////////////////////////////////\r\n\r\n    XPathParser.prototype = new Object();\r\n    XPathParser.prototype.constructor = XPathParser;\r\n    XPathParser.superclass = Object.prototype;\r\n\r\n    function XPathParser() {\r\n        this.init();\r\n    }\r\n\r\n    XPathParser.prototype.init = function () {\r\n        this.reduceActions = [];\r\n\r\n        this.reduceActions[3] = function (rhs) {\r\n            return new OrOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[5] = function (rhs) {\r\n            return new AndOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[7] = function (rhs) {\r\n            return new EqualsOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[8] = function (rhs) {\r\n            return new NotEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[10] = function (rhs) {\r\n            return new LessThanOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[11] = function (rhs) {\r\n            return new GreaterThanOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[12] = function (rhs) {\r\n            return new LessThanOrEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[13] = function (rhs) {\r\n            return new GreaterThanOrEqualOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[15] = function (rhs) {\r\n            return new PlusOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[16] = function (rhs) {\r\n            return new MinusOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[18] = function (rhs) {\r\n            return new MultiplyOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[19] = function (rhs) {\r\n            return new DivOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[20] = function (rhs) {\r\n            return new ModOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[22] = function (rhs) {\r\n            return new UnaryMinusOperation(rhs[1]);\r\n        };\r\n        this.reduceActions[24] = function (rhs) {\r\n            return new BarOperation(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[25] = function (rhs) {\r\n            return new PathExpr(undefined, undefined, rhs[0]);\r\n        };\r\n        this.reduceActions[27] = function (rhs) {\r\n            rhs[0].locationPath = rhs[2];\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[28] = function (rhs) {\r\n            rhs[0].locationPath = rhs[2];\r\n            rhs[0].locationPath.steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[29] = function (rhs) {\r\n            return new PathExpr(rhs[0], [], undefined);\r\n        };\r\n        this.reduceActions[30] = function (rhs) {\r\n            if (Utilities.instance_of(rhs[0], PathExpr)) {\r\n                if (rhs[0].filterPredicates == undefined) {\r\n                    rhs[0].filterPredicates = [];\r\n                }\r\n                rhs[0].filterPredicates.push(rhs[1]);\r\n                return rhs[0];\r\n            } else {\r\n                return new PathExpr(rhs[0], [rhs[1]], undefined);\r\n            }\r\n        };\r\n        this.reduceActions[32] = function (rhs) {\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[33] = function (rhs) {\r\n            return new XString(rhs[0]);\r\n        };\r\n        this.reduceActions[34] = function (rhs) {\r\n            return new XNumber(rhs[0]);\r\n        };\r\n        this.reduceActions[36] = function (rhs) {\r\n            return new FunctionCall(rhs[0], []);\r\n        };\r\n        this.reduceActions[37] = function (rhs) {\r\n            return new FunctionCall(rhs[0], rhs[2]);\r\n        };\r\n        this.reduceActions[38] = function (rhs) {\r\n            return [rhs[0]];\r\n        };\r\n        this.reduceActions[39] = function (rhs) {\r\n            rhs[2].unshift(rhs[0]);\r\n            return rhs[2];\r\n        };\r\n        this.reduceActions[43] = function (rhs) {\r\n            return new LocationPath(true, []);\r\n        };\r\n        this.reduceActions[44] = function (rhs) {\r\n            rhs[1].absolute = true;\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[46] = function (rhs) {\r\n            return new LocationPath(false, [rhs[0]]);\r\n        };\r\n        this.reduceActions[47] = function (rhs) {\r\n            rhs[0].steps.push(rhs[2]);\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[49] = function (rhs) {\r\n            return new Step(rhs[0], rhs[1], []);\r\n        };\r\n        this.reduceActions[50] = function (rhs) {\r\n            return new Step(Step.CHILD, rhs[0], []);\r\n        };\r\n        this.reduceActions[51] = function (rhs) {\r\n            return new Step(rhs[0], rhs[1], rhs[2]);\r\n        };\r\n        this.reduceActions[52] = function (rhs) {\r\n            return new Step(Step.CHILD, rhs[0], rhs[1]);\r\n        };\r\n        this.reduceActions[54] = function (rhs) {\r\n            return [rhs[0]];\r\n        };\r\n        this.reduceActions[55] = function (rhs) {\r\n            rhs[1].unshift(rhs[0]);\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[56] = function (rhs) {\r\n            if (rhs[0] == \"ancestor\") {\r\n                return Step.ANCESTOR;\r\n            } else if (rhs[0] == \"ancestor-or-self\") {\r\n                return Step.ANCESTORORSELF;\r\n            } else if (rhs[0] == \"attribute\") {\r\n                return Step.ATTRIBUTE;\r\n            } else if (rhs[0] == \"child\") {\r\n                return Step.CHILD;\r\n            } else if (rhs[0] == \"descendant\") {\r\n                return Step.DESCENDANT;\r\n            } else if (rhs[0] == \"descendant-or-self\") {\r\n                return Step.DESCENDANTORSELF;\r\n            } else if (rhs[0] == \"following\") {\r\n                return Step.FOLLOWING;\r\n            } else if (rhs[0] == \"following-sibling\") {\r\n                return Step.FOLLOWINGSIBLING;\r\n            } else if (rhs[0] == \"namespace\") {\r\n                return Step.NAMESPACE;\r\n            } else if (rhs[0] == \"parent\") {\r\n                return Step.PARENT;\r\n            } else if (rhs[0] == \"preceding\") {\r\n                return Step.PRECEDING;\r\n            } else if (rhs[0] == \"preceding-sibling\") {\r\n                return Step.PRECEDINGSIBLING;\r\n            } else if (rhs[0] == \"self\") {\r\n                return Step.SELF;\r\n            }\r\n            return -1;\r\n        };\r\n        this.reduceActions[57] = function (rhs) {\r\n            return Step.ATTRIBUTE;\r\n        };\r\n        this.reduceActions[59] = function (rhs) {\r\n            if (rhs[0] == \"comment\") {\r\n                return NodeTest.commentTest;\r\n            } else if (rhs[0] == \"text\") {\r\n                return NodeTest.textTest;\r\n            } else if (rhs[0] == \"processing-instruction\") {\r\n                return NodeTest.anyPiTest;\r\n            } else if (rhs[0] == \"node\") {\r\n                return NodeTest.nodeTest;\r\n            }\r\n            return new NodeTest(-1, undefined);\r\n        };\r\n        this.reduceActions[60] = function (rhs) {\r\n            return new NodeTest.PITest(rhs[2]);\r\n        };\r\n        this.reduceActions[61] = function (rhs) {\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[63] = function (rhs) {\r\n            rhs[1].absolute = true;\r\n            rhs[1].steps.unshift(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            return rhs[1];\r\n        };\r\n        this.reduceActions[64] = function (rhs) {\r\n            rhs[0].steps.push(new Step(Step.DESCENDANTORSELF, NodeTest.nodeTest, []));\r\n            rhs[0].steps.push(rhs[2]);\r\n            return rhs[0];\r\n        };\r\n        this.reduceActions[65] = function (rhs) {\r\n            return new Step(Step.SELF, NodeTest.nodeTest, []);\r\n        };\r\n        this.reduceActions[66] = function (rhs) {\r\n            return new Step(Step.PARENT, NodeTest.nodeTest, []);\r\n        };\r\n        this.reduceActions[67] = function (rhs) {\r\n            return new VariableReference(rhs[1]);\r\n        };\r\n        this.reduceActions[68] = function (rhs) {\r\n            return NodeTest.nameTestAny;\r\n        };\r\n        this.reduceActions[69] = function (rhs) {\r\n            return new NodeTest.NameTestPrefixAny(rhs[0].split(':')[0]);\r\n        };\r\n        this.reduceActions[70] = function (rhs) {\r\n            return new NodeTest.NameTestQName(rhs[0]);\r\n        };\r\n    };\r\n\r\n    XPathParser.actionTable = [\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"                 s                  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"                rrrrr               \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"rs  rrrrrrrr s  sssssrrrrrr  rrs rs \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"                            s       \",\r\n        \"                            s       \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"  s                                 \",\r\n        \"                            s       \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"a                                   \",\r\n        \"r       s                    rr  r  \",\r\n        \"r      sr                    rr  r  \",\r\n        \"r   s  rr            s       rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrs  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr sr  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"                sssss               \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             s      \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"              s                     \",\r\n        \"                             s      \",\r\n        \"                rrrrr               \",\r\n        \" s s        sssssssss    s sss s  ss\",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s s        sssssssss      ss  s  ss\",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \" s           s  sssss          s  s \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \" s           s  sssss          s  s \",\r\n        \" s           s  sssss          s  s \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr sr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             s      \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             rr     \",\r\n        \"                             s      \",\r\n        \"                             rs     \",\r\n        \"r      sr                    rr  r  \",\r\n        \"r   s  rr            s       rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rssrr            rss     rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrr            rrrss   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrsss         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrr   rr  r  \",\r\n        \"r   rrrrrrrr         rrrrrr  rr  r  \",\r\n        \"                                 r  \",\r\n        \"                                 s  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  srrrrrrrr         rrrrrrs rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr  r  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \" s s        sssssssss    s ss  s  ss\",\r\n        \"r  rrrrrrrrr         rrrrrrr rr rr  \",\r\n        \"                             r      \"\r\n    ];\r\n\r\n    XPathParser.actionTableNumber = [\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"                 J                  \",\r\n        \"a  aaaaaaaaa         aaaaaaa aa  a  \",\r\n        \"                YYYYY               \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"K1  KKKKKKKK .  +*)('KKKKKK  KK# K\\\" \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"                            N       \",\r\n        \"                            O       \",\r\n        \"e  eeeeeeeee         eeeeeee ee ee  \",\r\n        \"f  fffffffff         fffffff ff ff  \",\r\n        \"d  ddddddddd         ddddddd dd dd  \",\r\n        \"B  BBBBBBBBB         BBBBBBB BB BB  \",\r\n        \"A  AAAAAAAAA         AAAAAAA AA AA  \",\r\n        \"  P                                 \",\r\n        \"                            Q       \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \"b  bbbbbbbbb         bbbbbbb bb  b  \",\r\n        \"                                    \",\r\n        \"!       S                    !!  !  \",\r\n        \"\\\"      T\\\"                    \\\"\\\"  \\\"  \",\r\n        \"$   V  $$            U       $$  $  \",\r\n        \"&   &ZY&&            &XW     &&  &  \",\r\n        \")   )))))            )))\\\\[   ))  )  \",\r\n        \".   ....._^]         .....   ..  .  \",\r\n        \"1   11111111         11111   11  1  \",\r\n        \"5   55555555         55555`  55  5  \",\r\n        \"7   77777777         777777  77  7  \",\r\n        \"9   99999999         999999  99  9  \",\r\n        \":  c::::::::         ::::::b :: a:  \",\r\n        \"I  fIIIIIIII         IIIIIIe II  I  \",\r\n        \"=  =========         ======= == ==  \",\r\n        \"?  ?????????         ??????? ?? ??  \",\r\n        \"C  CCCCCCCCC         CCCCCCC CC CC  \",\r\n        \"J   JJJJJJJJ         JJJJJJ  JJ  J  \",\r\n        \"M   MMMMMMMM         MMMMMM  MM  M  \",\r\n        \"N  NNNNNNNNN         NNNNNNN NN  N  \",\r\n        \"P  PPPPPPPPP         PPPPPPP PP  P  \",\r\n        \"                +*)('               \",\r\n        \"R  RRRRRRRRR         RRRRRRR RR aR  \",\r\n        \"U  UUUUUUUUU         UUUUUUU UU  U  \",\r\n        \"Z  ZZZZZZZZZ         ZZZZZZZ ZZ ZZ  \",\r\n        \"c  ccccccccc         ccccccc cc cc  \",\r\n        \"                             j      \",\r\n        \"L  fLLLLLLLL         LLLLLLe LL  L  \",\r\n        \"6   66666666         66666   66  6  \",\r\n        \"              k                     \",\r\n        \"                             l      \",\r\n        \"                XXXXX               \",\r\n        \" 1 0        /.-,+*)('    & %$m #  \\\"!\",\r\n        \"_  f________         ______e __  _  \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('      %$  #  \\\"!\",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \">  >>>>>>>>>         >>>>>>> >> >>  \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \" 1           .  +*)('          #  \\\" \",\r\n        \"Q  QQQQQQQQQ         QQQQQQQ QQ aQ  \",\r\n        \"V  VVVVVVVVV         VVVVVVV VV aV  \",\r\n        \"T  TTTTTTTTT         TTTTTTT TT  T  \",\r\n        \"@  @@@@@@@@@         @@@@@@@ @@ @@  \",\r\n        \"                             \\x87      \",\r\n        \"[  [[[[[[[[[         [[[[[[[ [[ [[  \",\r\n        \"D  DDDDDDDDD         DDDDDDD DD DD  \",\r\n        \"                             HH     \",\r\n        \"                             \\x88      \",\r\n        \"                             F\\x89     \",\r\n        \"#      T#                    ##  #  \",\r\n        \"%   V  %%            U       %%  %  \",\r\n        \"'   'ZY''            'XW     ''  '  \",\r\n        \"(   (ZY((            (XW     ((  (  \",\r\n        \"+   +++++            +++\\\\[   ++  +  \",\r\n        \"*   *****            ***\\\\[   **  *  \",\r\n        \"-   -----            ---\\\\[   --  -  \",\r\n        \",   ,,,,,            ,,,\\\\[   ,,  ,  \",\r\n        \"0   00000_^]         00000   00  0  \",\r\n        \"/   /////_^]         /////   //  /  \",\r\n        \"2   22222222         22222   22  2  \",\r\n        \"3   33333333         33333   33  3  \",\r\n        \"4   44444444         44444   44  4  \",\r\n        \"8   88888888         888888  88  8  \",\r\n        \"                                 ^  \",\r\n        \"                                 \\x8a  \",\r\n        \";  f;;;;;;;;         ;;;;;;e ;;  ;  \",\r\n        \"<  f<<<<<<<<         <<<<<<e <<  <  \",\r\n        \"O  OOOOOOOOO         OOOOOOO OO  O  \",\r\n        \"`  `````````         ``````` ``  `  \",\r\n        \"S  SSSSSSSSS         SSSSSSS SS  S  \",\r\n        \"W  WWWWWWWWW         WWWWWWW WW  W  \",\r\n        \"\\\\  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\         \\\\\\\\\\\\\\\\\\\\\\\\\\\\ \\\\\\\\ \\\\\\\\  \",\r\n        \"E  EEEEEEEEE         EEEEEEE EE EE  \",\r\n        \" 1 0        /.-,+*)('    & %$  #  \\\"!\",\r\n        \"]  ]]]]]]]]]         ]]]]]]] ]] ]]  \",\r\n        \"                             G      \"\r\n    ];\r\n\r\n    XPathParser.gotoTable = [\r\n        \"3456789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"L456789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"            M        EFGH IJ \",\r\n        \"       N;<=>?@ AB  CDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"            S        EFGH IJ \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"              e              \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                        h  J \",\r\n        \"              i          j   \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"o456789:;<=>?@ ABpqCDEFGH IJ \",\r\n        \"                             \",\r\n        \"  r6789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"   s789:;<=>?@ AB  CDEFGH IJ \",\r\n        \"    t89:;<=>?@ AB  CDEFGH IJ \",\r\n        \"    u89:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     v9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     w9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     x9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"     y9:;<=>?@ AB  CDEFGH IJ \",\r\n        \"      z:;<=>?@ AB  CDEFGH IJ \",\r\n        \"      {:;<=>?@ AB  CDEFGH IJ \",\r\n        \"       |;<=>?@ AB  CDEFGH IJ \",\r\n        \"       };<=>?@ AB  CDEFGH IJ \",\r\n        \"       ~;<=>?@ AB  CDEFGH IJ \",\r\n        \"         \\x7f=>?@ AB  CDEFGH IJ \",\r\n        \"\\x80456789:;<=>?@ AB  CDEFGH IJ\\x81\",\r\n        \"            \\x82        EFGH IJ \",\r\n        \"            \\x83        EFGH IJ \",\r\n        \"                             \",\r\n        \"                     \\x84 GH IJ \",\r\n        \"                     \\x85 GH IJ \",\r\n        \"              i          \\x86   \",\r\n        \"              i          \\x87   \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"                             \",\r\n        \"o456789:;<=>?@ AB\\x8cqCDEFGH IJ \",\r\n        \"                             \",\r\n        \"                             \"\r\n    ];\r\n\r\n    XPathParser.productions = [\r\n        [1, 1, 2],\r\n        [2, 1, 3],\r\n        [3, 1, 4],\r\n        [3, 3, 3, -9, 4],\r\n        [4, 1, 5],\r\n        [4, 3, 4, -8, 5],\r\n        [5, 1, 6],\r\n        [5, 3, 5, -22, 6],\r\n        [5, 3, 5, -5, 6],\r\n        [6, 1, 7],\r\n        [6, 3, 6, -23, 7],\r\n        [6, 3, 6, -24, 7],\r\n        [6, 3, 6, -6, 7],\r\n        [6, 3, 6, -7, 7],\r\n        [7, 1, 8],\r\n        [7, 3, 7, -25, 8],\r\n        [7, 3, 7, -26, 8],\r\n        [8, 1, 9],\r\n        [8, 3, 8, -12, 9],\r\n        [8, 3, 8, -11, 9],\r\n        [8, 3, 8, -10, 9],\r\n        [9, 1, 10],\r\n        [9, 2, -26, 9],\r\n        [10, 1, 11],\r\n        [10, 3, 10, -27, 11],\r\n        [11, 1, 12],\r\n        [11, 1, 13],\r\n        [11, 3, 13, -28, 14],\r\n        [11, 3, 13, -4, 14],\r\n        [13, 1, 15],\r\n        [13, 2, 13, 16],\r\n        [15, 1, 17],\r\n        [15, 3, -29, 2, -30],\r\n        [15, 1, -15],\r\n        [15, 1, -16],\r\n        [15, 1, 18],\r\n        [18, 3, -13, -29, -30],\r\n        [18, 4, -13, -29, 19, -30],\r\n        [19, 1, 20],\r\n        [19, 3, 20, -31, 19],\r\n        [20, 1, 2],\r\n        [12, 1, 14],\r\n        [12, 1, 21],\r\n        [21, 1, -28],\r\n        [21, 2, -28, 14],\r\n        [21, 1, 22],\r\n        [14, 1, 23],\r\n        [14, 3, 14, -28, 23],\r\n        [14, 1, 24],\r\n        [23, 2, 25, 26],\r\n        [23, 1, 26],\r\n        [23, 3, 25, 26, 27],\r\n        [23, 2, 26, 27],\r\n        [23, 1, 28],\r\n        [27, 1, 16],\r\n        [27, 2, 16, 27],\r\n        [25, 2, -14, -3],\r\n        [25, 1, -32],\r\n        [26, 1, 29],\r\n        [26, 3, -20, -29, -30],\r\n        [26, 4, -21, -29, -15, -30],\r\n        [16, 3, -33, 30, -34],\r\n        [30, 1, 2],\r\n        [22, 2, -4, 14],\r\n        [24, 3, 14, -4, 23],\r\n        [28, 1, -35],\r\n        [28, 1, -2],\r\n        [17, 2, -36, -18],\r\n        [29, 1, -17],\r\n        [29, 1, -19],\r\n        [29, 1, -18]\r\n    ];\r\n\r\n    XPathParser.DOUBLEDOT = 2;\r\n    XPathParser.DOUBLECOLON = 3;\r\n    XPathParser.DOUBLESLASH = 4;\r\n    XPathParser.NOTEQUAL = 5;\r\n    XPathParser.LESSTHANOREQUAL = 6;\r\n    XPathParser.GREATERTHANOREQUAL = 7;\r\n    XPathParser.AND = 8;\r\n    XPathParser.OR = 9;\r\n    XPathParser.MOD = 10;\r\n    XPathParser.DIV = 11;\r\n    XPathParser.MULTIPLYOPERATOR = 12;\r\n    XPathParser.FUNCTIONNAME = 13;\r\n    XPathParser.AXISNAME = 14;\r\n    XPathParser.LITERAL = 15;\r\n    XPathParser.NUMBER = 16;\r\n    XPathParser.ASTERISKNAMETEST = 17;\r\n    XPathParser.QNAME = 18;\r\n    XPathParser.NCNAMECOLONASTERISK = 19;\r\n    XPathParser.NODETYPE = 20;\r\n    XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL = 21;\r\n    XPathParser.EQUALS = 22;\r\n    XPathParser.LESSTHAN = 23;\r\n    XPathParser.GREATERTHAN = 24;\r\n    XPathParser.PLUS = 25;\r\n    XPathParser.MINUS = 26;\r\n    XPathParser.BAR = 27;\r\n    XPathParser.SLASH = 28;\r\n    XPathParser.LEFTPARENTHESIS = 29;\r\n    XPathParser.RIGHTPARENTHESIS = 30;\r\n    XPathParser.COMMA = 31;\r\n    XPathParser.AT = 32;\r\n    XPathParser.LEFTBRACKET = 33;\r\n    XPathParser.RIGHTBRACKET = 34;\r\n    XPathParser.DOT = 35;\r\n    XPathParser.DOLLAR = 36;\r\n\r\n    XPathParser.prototype.tokenize = function (s1) {\r\n        var types = [];\r\n        var values = [];\r\n        var s = s1 + '\\0';\r\n\r\n        var pos = 0;\r\n        var c = s.charAt(pos++);\r\n        while (1) {\r\n            while (c == ' ' || c == '\\t' || c == '\\r' || c == '\\n') {\r\n                c = s.charAt(pos++);\r\n            }\r\n            if (c == '\\0' || pos >= s.length) {\r\n                break;\r\n            }\r\n\r\n            if (c == '(') {\r\n                types.push(XPathParser.LEFTPARENTHESIS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ')') {\r\n                types.push(XPathParser.RIGHTPARENTHESIS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '[') {\r\n                types.push(XPathParser.LEFTBRACKET);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ']') {\r\n                types.push(XPathParser.RIGHTBRACKET);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '@') {\r\n                types.push(XPathParser.AT);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == ',') {\r\n                types.push(XPathParser.COMMA);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '|') {\r\n                types.push(XPathParser.BAR);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '+') {\r\n                types.push(XPathParser.PLUS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '-') {\r\n                types.push(XPathParser.MINUS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '=') {\r\n                types.push(XPathParser.EQUALS);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n            if (c == '$') {\r\n                types.push(XPathParser.DOLLAR);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '.') {\r\n                c = s.charAt(pos++);\r\n                if (c == '.') {\r\n                    types.push(XPathParser.DOUBLEDOT);\r\n                    values.push(\"..\");\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                if (c >= '0' && c <= '9') {\r\n                    var number = \".\" + c;\r\n                    c = s.charAt(pos++);\r\n                    while (c >= '0' && c <= '9') {\r\n                        number += c;\r\n                        c = s.charAt(pos++);\r\n                    }\r\n                    types.push(XPathParser.NUMBER);\r\n                    values.push(number);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.DOT);\r\n                values.push('.');\r\n                continue;\r\n            }\r\n\r\n            if (c == '\\'' || c == '\"') {\r\n                var delimiter = c;\r\n                var literal = \"\";\r\n                while (pos < s.length && (c = s.charAt(pos)) !== delimiter) {\r\n                    literal += c;\r\n                    pos += 1;\r\n                }\r\n                if (c !== delimiter) {\r\n                    throw XPathException.fromMessage(\"Unterminated string literal: \" + delimiter + literal);\r\n                }\r\n                pos += 1;\r\n                types.push(XPathParser.LITERAL);\r\n                values.push(literal);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c >= '0' && c <= '9') {\r\n                var number = c;\r\n                c = s.charAt(pos++);\r\n                while (c >= '0' && c <= '9') {\r\n                    number += c;\r\n                    c = s.charAt(pos++);\r\n                }\r\n                if (c == '.') {\r\n                    if (s.charAt(pos) >= '0' && s.charAt(pos) <= '9') {\r\n                        number += c;\r\n                        number += s.charAt(pos++);\r\n                        c = s.charAt(pos++);\r\n                        while (c >= '0' && c <= '9') {\r\n                            number += c;\r\n                            c = s.charAt(pos++);\r\n                        }\r\n                    }\r\n                }\r\n                types.push(XPathParser.NUMBER);\r\n                values.push(number);\r\n                continue;\r\n            }\r\n\r\n            if (c == '*') {\r\n                if (types.length > 0) {\r\n                    var last = types[types.length - 1];\r\n                    if (last != XPathParser.AT\r\n                        && last != XPathParser.DOUBLECOLON\r\n                        && last != XPathParser.LEFTPARENTHESIS\r\n                        && last != XPathParser.LEFTBRACKET\r\n                        && last != XPathParser.AND\r\n                        && last != XPathParser.OR\r\n                        && last != XPathParser.MOD\r\n                        && last != XPathParser.DIV\r\n                        && last != XPathParser.MULTIPLYOPERATOR\r\n                        && last != XPathParser.SLASH\r\n                        && last != XPathParser.DOUBLESLASH\r\n                        && last != XPathParser.BAR\r\n                        && last != XPathParser.PLUS\r\n                        && last != XPathParser.MINUS\r\n                        && last != XPathParser.EQUALS\r\n                        && last != XPathParser.NOTEQUAL\r\n                        && last != XPathParser.LESSTHAN\r\n                        && last != XPathParser.LESSTHANOREQUAL\r\n                        && last != XPathParser.GREATERTHAN\r\n                        && last != XPathParser.GREATERTHANOREQUAL) {\r\n                        types.push(XPathParser.MULTIPLYOPERATOR);\r\n                        values.push(c);\r\n                        c = s.charAt(pos++);\r\n                        continue;\r\n                    }\r\n                }\r\n                types.push(XPathParser.ASTERISKNAMETEST);\r\n                values.push(c);\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == ':') {\r\n                if (s.charAt(pos) == ':') {\r\n                    types.push(XPathParser.DOUBLECOLON);\r\n                    values.push(\"::\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (c == '/') {\r\n                c = s.charAt(pos++);\r\n                if (c == '/') {\r\n                    types.push(XPathParser.DOUBLESLASH);\r\n                    values.push(\"//\");\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.SLASH);\r\n                values.push('/');\r\n                continue;\r\n            }\r\n\r\n            if (c == '!') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.NOTEQUAL);\r\n                    values.push(\"!=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (c == '<') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.LESSTHANOREQUAL);\r\n                    values.push(\"<=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.LESSTHAN);\r\n                values.push('<');\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '>') {\r\n                if (s.charAt(pos) == '=') {\r\n                    types.push(XPathParser.GREATERTHANOREQUAL);\r\n                    values.push(\">=\");\r\n                    pos++;\r\n                    c = s.charAt(pos++);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.GREATERTHAN);\r\n                values.push('>');\r\n                c = s.charAt(pos++);\r\n                continue;\r\n            }\r\n\r\n            if (c == '_' || Utilities.isLetter(c.charCodeAt(0))) {\r\n                var name = c;\r\n                c = s.charAt(pos++);\r\n                while (Utilities.isNCNameChar(c.charCodeAt(0))) {\r\n                    name += c;\r\n                    c = s.charAt(pos++);\r\n                }\r\n                if (types.length > 0) {\r\n                    var last = types[types.length - 1];\r\n                    if (last != XPathParser.AT\r\n                        && last != XPathParser.DOUBLECOLON\r\n                        && last != XPathParser.LEFTPARENTHESIS\r\n                        && last != XPathParser.LEFTBRACKET\r\n                        && last != XPathParser.AND\r\n                        && last != XPathParser.OR\r\n                        && last != XPathParser.MOD\r\n                        && last != XPathParser.DIV\r\n                        && last != XPathParser.MULTIPLYOPERATOR\r\n                        && last != XPathParser.SLASH\r\n                        && last != XPathParser.DOUBLESLASH\r\n                        && last != XPathParser.BAR\r\n                        && last != XPathParser.PLUS\r\n                        && last != XPathParser.MINUS\r\n                        && last != XPathParser.EQUALS\r\n                        && last != XPathParser.NOTEQUAL\r\n                        && last != XPathParser.LESSTHAN\r\n                        && last != XPathParser.LESSTHANOREQUAL\r\n                        && last != XPathParser.GREATERTHAN\r\n                        && last != XPathParser.GREATERTHANOREQUAL) {\r\n                        if (name == \"and\") {\r\n                            types.push(XPathParser.AND);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"or\") {\r\n                            types.push(XPathParser.OR);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"mod\") {\r\n                            types.push(XPathParser.MOD);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        if (name == \"div\") {\r\n                            types.push(XPathParser.DIV);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n                if (c == ':') {\r\n                    if (s.charAt(pos) == '*') {\r\n                        types.push(XPathParser.NCNAMECOLONASTERISK);\r\n                        values.push(name + \":*\");\r\n                        pos++;\r\n                        c = s.charAt(pos++);\r\n                        continue;\r\n                    }\r\n                    if (s.charAt(pos) == '_' || Utilities.isLetter(s.charCodeAt(pos))) {\r\n                        name += ':';\r\n                        c = s.charAt(pos++);\r\n                        while (Utilities.isNCNameChar(c.charCodeAt(0))) {\r\n                            name += c;\r\n                            c = s.charAt(pos++);\r\n                        }\r\n                        if (c == '(') {\r\n                            types.push(XPathParser.FUNCTIONNAME);\r\n                            values.push(name);\r\n                            continue;\r\n                        }\r\n                        types.push(XPathParser.QNAME);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    if (s.charAt(pos) == ':') {\r\n                        types.push(XPathParser.AXISNAME);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                }\r\n                if (c == '(') {\r\n                    if (name == \"comment\" || name == \"text\" || name == \"node\") {\r\n                        types.push(XPathParser.NODETYPE);\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    if (name == \"processing-instruction\") {\r\n                        if (s.charAt(pos) == ')') {\r\n                            types.push(XPathParser.NODETYPE);\r\n                        } else {\r\n                            types.push(XPathParser.PROCESSINGINSTRUCTIONWITHLITERAL);\r\n                        }\r\n                        values.push(name);\r\n                        continue;\r\n                    }\r\n                    types.push(XPathParser.FUNCTIONNAME);\r\n                    values.push(name);\r\n                    continue;\r\n                }\r\n                types.push(XPathParser.QNAME);\r\n                values.push(name);\r\n                continue;\r\n            }\r\n\r\n            throw new Error(\"Unexpected character \" + c);\r\n        }\r\n        types.push(1);\r\n        values.push(\"[EOF]\");\r\n        return [types, values];\r\n    };\r\n\r\n    XPathParser.SHIFT = 's';\r\n    XPathParser.REDUCE = 'r';\r\n    XPathParser.ACCEPT = 'a';\r\n\r\n    XPathParser.prototype.parse = function (s) {\r\n        var types;\r\n        var values;\r\n        var res = this.tokenize(s);\r\n        if (res == undefined) {\r\n            return undefined;\r\n        }\r\n        types = res[0];\r\n        values = res[1];\r\n        var tokenPos = 0;\r\n        var state = [];\r\n        var tokenType = [];\r\n        var tokenValue = [];\r\n        var s;\r\n        var a;\r\n        var t;\r\n\r\n        state.push(0);\r\n        tokenType.push(1);\r\n        tokenValue.push(\"_S\");\r\n\r\n        a = types[tokenPos];\r\n        t = values[tokenPos++];\r\n        while (1) {\r\n            s = state[state.length - 1];\r\n            switch (XPathParser.actionTable[s].charAt(a - 1)) {\r\n                case XPathParser.SHIFT:\r\n                    tokenType.push(-a);\r\n                    tokenValue.push(t);\r\n                    state.push(XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32);\r\n                    a = types[tokenPos];\r\n                    t = values[tokenPos++];\r\n                    break;\r\n                case XPathParser.REDUCE:\r\n                    var num = XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][1];\r\n                    var rhs = [];\r\n                    for (var i = 0; i < num; i++) {\r\n                        tokenType.pop();\r\n                        rhs.unshift(tokenValue.pop());\r\n                        state.pop();\r\n                    }\r\n                    var s_ = state[state.length - 1];\r\n                    tokenType.push(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0]);\r\n                    if (this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32] == undefined) {\r\n                        tokenValue.push(rhs[0]);\r\n                    } else {\r\n                        tokenValue.push(this.reduceActions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32](rhs));\r\n                    }\r\n                    state.push(XPathParser.gotoTable[s_].charCodeAt(XPathParser.productions[XPathParser.actionTableNumber[s].charCodeAt(a - 1) - 32][0] - 2) - 33);\r\n                    break;\r\n                case XPathParser.ACCEPT:\r\n                    return new XPath(tokenValue.pop());\r\n                default:\r\n                    throw new Error(\"XPath parse error\");\r\n            }\r\n        }\r\n    };\r\n\r\n    // XPath /////////////////////////////////////////////////////////////////////\r\n\r\n    XPath.prototype = new Object();\r\n    XPath.prototype.constructor = XPath;\r\n    XPath.superclass = Object.prototype;\r\n\r\n    function XPath(e) {\r\n        this.expression = e;\r\n    }\r\n\r\n    XPath.prototype.toString = function () {\r\n        return this.expression.toString();\r\n    };\r\n\r\n    function setIfUnset(obj, prop, value) {\r\n        if (!(prop in obj)) {\r\n            obj[prop] = value;\r\n        }\r\n    }\r\n\r\n    XPath.prototype.evaluate = function (c) {\r\n        c.contextNode = c.expressionContextNode;\r\n        c.contextSize = 1;\r\n        c.contextPosition = 1;\r\n\r\n        // [2017-11-25] Removed usage of .implementation.hasFeature() since it does\r\n        //              not reliably detect HTML DOMs (always returns false in xmldom and true in browsers)\r\n        if (c.isHtml) {\r\n            setIfUnset(c, 'caseInsensitive', true);\r\n            setIfUnset(c, 'allowAnyNamespaceForNoPrefix', true);\r\n        }\r\n\r\n        setIfUnset(c, 'caseInsensitive', false);\r\n\r\n        return this.expression.evaluate(c);\r\n    };\r\n\r\n    XPath.XML_NAMESPACE_URI = \"http://www.w3.org/XML/1998/namespace\";\r\n    XPath.XMLNS_NAMESPACE_URI = \"http://www.w3.org/2000/xmlns/\";\r\n\r\n    // Expression ////////////////////////////////////////////////////////////////\r\n\r\n    Expression.prototype = new Object();\r\n    Expression.prototype.constructor = Expression;\r\n    Expression.superclass = Object.prototype;\r\n\r\n    function Expression() {\r\n    }\r\n\r\n    Expression.prototype.init = function () {\r\n    };\r\n\r\n    Expression.prototype.toString = function () {\r\n        return \"<Expression>\";\r\n    };\r\n\r\n    Expression.prototype.evaluate = function (c) {\r\n        throw new Error(\"Could not evaluate expression.\");\r\n    };\r\n\r\n    // UnaryOperation ////////////////////////////////////////////////////////////\r\n\r\n    UnaryOperation.prototype = new Expression();\r\n    UnaryOperation.prototype.constructor = UnaryOperation;\r\n    UnaryOperation.superclass = Expression.prototype;\r\n\r\n    function UnaryOperation(rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(rhs);\r\n        }\r\n    }\r\n\r\n    UnaryOperation.prototype.init = function (rhs) {\r\n        this.rhs = rhs;\r\n    };\r\n\r\n    // UnaryMinusOperation ///////////////////////////////////////////////////////\r\n\r\n    UnaryMinusOperation.prototype = new UnaryOperation();\r\n    UnaryMinusOperation.prototype.constructor = UnaryMinusOperation;\r\n    UnaryMinusOperation.superclass = UnaryOperation.prototype;\r\n\r\n    function UnaryMinusOperation(rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(rhs);\r\n        }\r\n    }\r\n\r\n    UnaryMinusOperation.prototype.init = function (rhs) {\r\n        UnaryMinusOperation.superclass.init.call(this, rhs);\r\n    };\r\n\r\n    UnaryMinusOperation.prototype.evaluate = function (c) {\r\n        return this.rhs.evaluate(c).number().negate();\r\n    };\r\n\r\n    UnaryMinusOperation.prototype.toString = function () {\r\n        return \"-\" + this.rhs.toString();\r\n    };\r\n\r\n    // BinaryOperation ///////////////////////////////////////////////////////////\r\n\r\n    BinaryOperation.prototype = new Expression();\r\n    BinaryOperation.prototype.constructor = BinaryOperation;\r\n    BinaryOperation.superclass = Expression.prototype;\r\n\r\n    function BinaryOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    BinaryOperation.prototype.init = function (lhs, rhs) {\r\n        this.lhs = lhs;\r\n        this.rhs = rhs;\r\n    };\r\n\r\n    // OrOperation ///////////////////////////////////////////////////////////////\r\n\r\n    OrOperation.prototype = new BinaryOperation();\r\n    OrOperation.prototype.constructor = OrOperation;\r\n    OrOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function OrOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    OrOperation.prototype.init = function (lhs, rhs) {\r\n        OrOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    OrOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" or \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    OrOperation.prototype.evaluate = function (c) {\r\n        var b = this.lhs.evaluate(c).bool();\r\n        if (b.booleanValue()) {\r\n            return b;\r\n        }\r\n        return this.rhs.evaluate(c).bool();\r\n    };\r\n\r\n    // AndOperation //////////////////////////////////////////////////////////////\r\n\r\n    AndOperation.prototype = new BinaryOperation();\r\n    AndOperation.prototype.constructor = AndOperation;\r\n    AndOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function AndOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    AndOperation.prototype.init = function (lhs, rhs) {\r\n        AndOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    AndOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" and \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    AndOperation.prototype.evaluate = function (c) {\r\n        var b = this.lhs.evaluate(c).bool();\r\n        if (!b.booleanValue()) {\r\n            return b;\r\n        }\r\n        return this.rhs.evaluate(c).bool();\r\n    };\r\n\r\n    // EqualsOperation ///////////////////////////////////////////////////////////\r\n\r\n    EqualsOperation.prototype = new BinaryOperation();\r\n    EqualsOperation.prototype.constructor = EqualsOperation;\r\n    EqualsOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function EqualsOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    EqualsOperation.prototype.init = function (lhs, rhs) {\r\n        EqualsOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    EqualsOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" = \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    EqualsOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).equals(this.rhs.evaluate(c));\r\n    };\r\n\r\n    // NotEqualOperation /////////////////////////////////////////////////////////\r\n\r\n    NotEqualOperation.prototype = new BinaryOperation();\r\n    NotEqualOperation.prototype.constructor = NotEqualOperation;\r\n    NotEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function NotEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    NotEqualOperation.prototype.init = function (lhs, rhs) {\r\n        NotEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    NotEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" != \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    NotEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).notequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    // LessThanOperation /////////////////////////////////////////////////////////\r\n\r\n    LessThanOperation.prototype = new BinaryOperation();\r\n    LessThanOperation.prototype.constructor = LessThanOperation;\r\n    LessThanOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function LessThanOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    LessThanOperation.prototype.init = function (lhs, rhs) {\r\n        LessThanOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    LessThanOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).lessthan(this.rhs.evaluate(c));\r\n    };\r\n\r\n    LessThanOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" < \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // GreaterThanOperation //////////////////////////////////////////////////////\r\n\r\n    GreaterThanOperation.prototype = new BinaryOperation();\r\n    GreaterThanOperation.prototype.constructor = GreaterThanOperation;\r\n    GreaterThanOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function GreaterThanOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    GreaterThanOperation.prototype.init = function (lhs, rhs) {\r\n        GreaterThanOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    GreaterThanOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).greaterthan(this.rhs.evaluate(c));\r\n    };\r\n\r\n    GreaterThanOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" > \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // LessThanOrEqualOperation //////////////////////////////////////////////////\r\n\r\n    LessThanOrEqualOperation.prototype = new BinaryOperation();\r\n    LessThanOrEqualOperation.prototype.constructor = LessThanOrEqualOperation;\r\n    LessThanOrEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function LessThanOrEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    LessThanOrEqualOperation.prototype.init = function (lhs, rhs) {\r\n        LessThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    LessThanOrEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).lessthanorequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    LessThanOrEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" <= \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // GreaterThanOrEqualOperation ///////////////////////////////////////////////\r\n\r\n    GreaterThanOrEqualOperation.prototype = new BinaryOperation();\r\n    GreaterThanOrEqualOperation.prototype.constructor = GreaterThanOrEqualOperation;\r\n    GreaterThanOrEqualOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function GreaterThanOrEqualOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    GreaterThanOrEqualOperation.prototype.init = function (lhs, rhs) {\r\n        GreaterThanOrEqualOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    GreaterThanOrEqualOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).greaterthanorequal(this.rhs.evaluate(c));\r\n    };\r\n\r\n    GreaterThanOrEqualOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" >= \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // PlusOperation /////////////////////////////////////////////////////////////\r\n\r\n    PlusOperation.prototype = new BinaryOperation();\r\n    PlusOperation.prototype.constructor = PlusOperation;\r\n    PlusOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function PlusOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    PlusOperation.prototype.init = function (lhs, rhs) {\r\n        PlusOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    PlusOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().plus(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    PlusOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" + \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // MinusOperation ////////////////////////////////////////////////////////////\r\n\r\n    MinusOperation.prototype = new BinaryOperation();\r\n    MinusOperation.prototype.constructor = MinusOperation;\r\n    MinusOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function MinusOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    MinusOperation.prototype.init = function (lhs, rhs) {\r\n        MinusOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    MinusOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().minus(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    MinusOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" - \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // MultiplyOperation /////////////////////////////////////////////////////////\r\n\r\n    MultiplyOperation.prototype = new BinaryOperation();\r\n    MultiplyOperation.prototype.constructor = MultiplyOperation;\r\n    MultiplyOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function MultiplyOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    MultiplyOperation.prototype.init = function (lhs, rhs) {\r\n        MultiplyOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    MultiplyOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().multiply(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    MultiplyOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" * \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // DivOperation //////////////////////////////////////////////////////////////\r\n\r\n    DivOperation.prototype = new BinaryOperation();\r\n    DivOperation.prototype.constructor = DivOperation;\r\n    DivOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function DivOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    DivOperation.prototype.init = function (lhs, rhs) {\r\n        DivOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    DivOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().div(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    DivOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" div \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // ModOperation //////////////////////////////////////////////////////////////\r\n\r\n    ModOperation.prototype = new BinaryOperation();\r\n    ModOperation.prototype.constructor = ModOperation;\r\n    ModOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function ModOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    ModOperation.prototype.init = function (lhs, rhs) {\r\n        ModOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    ModOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).number().mod(this.rhs.evaluate(c).number());\r\n    };\r\n\r\n    ModOperation.prototype.toString = function () {\r\n        return \"(\" + this.lhs.toString() + \" mod \" + this.rhs.toString() + \")\";\r\n    };\r\n\r\n    // BarOperation //////////////////////////////////////////////////////////////\r\n\r\n    BarOperation.prototype = new BinaryOperation();\r\n    BarOperation.prototype.constructor = BarOperation;\r\n    BarOperation.superclass = BinaryOperation.prototype;\r\n\r\n    function BarOperation(lhs, rhs) {\r\n        if (arguments.length > 0) {\r\n            this.init(lhs, rhs);\r\n        }\r\n    }\r\n\r\n    BarOperation.prototype.init = function (lhs, rhs) {\r\n        BarOperation.superclass.init.call(this, lhs, rhs);\r\n    };\r\n\r\n    BarOperation.prototype.evaluate = function (c) {\r\n        return this.lhs.evaluate(c).nodeset().union(this.rhs.evaluate(c).nodeset());\r\n    };\r\n\r\n    BarOperation.prototype.toString = function () {\r\n        return map(toString, [this.lhs, this.rhs]).join(' | ');\r\n    };\r\n\r\n    // PathExpr //////////////////////////////////////////////////////////////////\r\n\r\n    PathExpr.prototype = new Expression();\r\n    PathExpr.prototype.constructor = PathExpr;\r\n    PathExpr.superclass = Expression.prototype;\r\n\r\n    function PathExpr(filter, filterPreds, locpath) {\r\n        if (arguments.length > 0) {\r\n            this.init(filter, filterPreds, locpath);\r\n        }\r\n    }\r\n\r\n    PathExpr.prototype.init = function (filter, filterPreds, locpath) {\r\n        PathExpr.superclass.init.call(this);\r\n        this.filter = filter;\r\n        this.filterPredicates = filterPreds;\r\n        this.locationPath = locpath;\r\n    };\r\n\r\n    /**\r\n     * Returns the topmost node of the tree containing node\r\n     */\r\n    function findRoot(node) {\r\n        while (node && node.parentNode) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    PathExpr.applyPredicates = function (predicates, c, nodes) {\r\n        if (predicates.length === 0) {\r\n            return nodes;\r\n        }\r\n\r\n        var ctx = c.extend({});\r\n\r\n        return reduce(\r\n            function (inNodes, pred) {\r\n                ctx.contextSize = inNodes.length;\r\n\r\n                return filter(\r\n                    function (node, i) {\r\n                        ctx.contextNode = node;\r\n                        ctx.contextPosition = i + 1;\r\n\r\n                        return PathExpr.predicateMatches(pred, ctx);\r\n                    },\r\n                    inNodes\r\n                );\r\n            },\r\n            nodes,\r\n            predicates\r\n        );\r\n    };\r\n\r\n    PathExpr.getRoot = function (xpc, nodes) {\r\n        var firstNode = nodes[0];\r\n\r\n        if (firstNode.nodeType === 9 /*Node.DOCUMENT_NODE*/) {\r\n            return firstNode;\r\n        }\r\n\r\n        if (xpc.virtualRoot) {\r\n            return xpc.virtualRoot;\r\n        }\r\n\r\n        var ownerDoc = firstNode.ownerDocument;\r\n\r\n        if (ownerDoc) {\r\n            return ownerDoc;\r\n        }\r\n\r\n        // IE 5.5 doesn't have ownerDocument?\r\n        var n = firstNode;\r\n        while (n.parentNode != null) {\r\n            n = n.parentNode;\r\n        }\r\n        return n;\r\n    }\r\n\r\n    PathExpr.applyStep = function (step, xpc, node) {\r\n        var self = this;\r\n        var newNodes = [];\r\n        xpc.contextNode = node;\r\n\r\n        switch (step.axis) {\r\n            case Step.ANCESTOR:\r\n                // look at all the ancestor nodes\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                var m;\r\n                if (xpc.contextNode.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n                    m = PathExpr.getOwnerElement(xpc.contextNode);\r\n                } else {\r\n                    m = xpc.contextNode.parentNode;\r\n                }\r\n                while (m != null) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                    if (m === xpc.virtualRoot) {\r\n                        break;\r\n                    }\r\n                    m = m.parentNode;\r\n                }\r\n                break;\r\n\r\n            case Step.ANCESTORORSELF:\r\n                // look at all the ancestor nodes and the current node\r\n                for (var m = xpc.contextNode; m != null; m = m.nodeType == 2 /*Node.ATTRIBUTE_NODE*/ ? PathExpr.getOwnerElement(m) : m.parentNode) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                    if (m === xpc.virtualRoot) {\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.ATTRIBUTE:\r\n                // look at the attributes\r\n                var nnm = xpc.contextNode.attributes;\r\n                if (nnm != null) {\r\n                    for (var k = 0; k < nnm.length; k++) {\r\n                        var m = nnm.item(k);\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.CHILD:\r\n                // look at all child elements\r\n                for (var m = xpc.contextNode.firstChild; m != null; m = m.nextSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.DESCENDANT:\r\n                // look at all descendant nodes\r\n                var st = [xpc.contextNode.firstChild];\r\n                while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.DESCENDANTORSELF:\r\n                // look at self\r\n                if (step.nodeTest.matches(xpc.contextNode, xpc)) {\r\n                    newNodes.push(xpc.contextNode);\r\n                }\r\n                // look at all descendant nodes\r\n                var st = [xpc.contextNode.firstChild];\r\n                while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.FOLLOWING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                var st = [];\r\n                if (xpc.contextNode.firstChild != null) {\r\n                    st.unshift(xpc.contextNode.firstChild);\r\n                } else {\r\n                    st.unshift(xpc.contextNode.nextSibling);\r\n                }\r\n                for (var m = xpc.contextNode.parentNode; m != null && m.nodeType != 9 /*Node.DOCUMENT_NODE*/ && m !== xpc.virtualRoot; m = m.parentNode) {\r\n                    st.unshift(m.nextSibling);\r\n                }\r\n                do {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.push(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                } while (st.length > 0);\r\n                break;\r\n\r\n            case Step.FOLLOWINGSIBLING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                for (var m = xpc.contextNode.nextSibling; m != null; m = m.nextSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.NAMESPACE:\r\n                var n = {};\r\n                if (xpc.contextNode.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n                    n[\"xml\"] = XPath.XML_NAMESPACE_URI;\r\n                    n[\"xmlns\"] = XPath.XMLNS_NAMESPACE_URI;\r\n                    for (var m = xpc.contextNode; m != null && m.nodeType == 1 /*Node.ELEMENT_NODE*/; m = m.parentNode) {\r\n                        for (var k = 0; k < m.attributes.length; k++) {\r\n                            var attr = m.attributes.item(k);\r\n                            var nm = String(attr.name);\r\n                            if (nm == \"xmlns\") {\r\n                                if (n[\"\"] == undefined) {\r\n                                    n[\"\"] = attr.value;\r\n                                }\r\n                            } else if (nm.length > 6 && nm.substring(0, 6) == \"xmlns:\") {\r\n                                var pre = nm.substring(6, nm.length);\r\n                                if (n[pre] == undefined) {\r\n                                    n[pre] = attr.value;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    for (var pre in n) {\r\n                        var nsn = new XPathNamespace(pre, n[pre], xpc.contextNode);\r\n                        if (step.nodeTest.matches(nsn, xpc)) {\r\n                            newNodes.push(nsn);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.PARENT:\r\n                m = null;\r\n                if (xpc.contextNode !== xpc.virtualRoot) {\r\n                    if (xpc.contextNode.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n                        m = PathExpr.getOwnerElement(xpc.contextNode);\r\n                    } else {\r\n                        m = xpc.contextNode.parentNode;\r\n                    }\r\n                }\r\n                if (m != null && step.nodeTest.matches(m, xpc)) {\r\n                    newNodes.push(m);\r\n                }\r\n                break;\r\n\r\n            case Step.PRECEDING:\r\n                var st;\r\n                if (xpc.virtualRoot != null) {\r\n                    st = [xpc.virtualRoot];\r\n                } else {\r\n                    // cannot rely on .ownerDocument because the node may be in a document fragment\r\n                    st = [findRoot(xpc.contextNode)];\r\n                }\r\n                outer: while (st.length > 0) {\r\n                    for (var m = st.pop(); m != null;) {\r\n                        if (m == xpc.contextNode) {\r\n                            break outer;\r\n                        }\r\n                        if (step.nodeTest.matches(m, xpc)) {\r\n                            newNodes.unshift(m);\r\n                        }\r\n                        if (m.firstChild != null) {\r\n                            st.push(m.nextSibling);\r\n                            m = m.firstChild;\r\n                        } else {\r\n                            m = m.nextSibling;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.PRECEDINGSIBLING:\r\n                if (xpc.contextNode === xpc.virtualRoot) {\r\n                    break;\r\n                }\r\n                for (var m = xpc.contextNode.previousSibling; m != null; m = m.previousSibling) {\r\n                    if (step.nodeTest.matches(m, xpc)) {\r\n                        newNodes.push(m);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case Step.SELF:\r\n                if (step.nodeTest.matches(xpc.contextNode, xpc)) {\r\n                    newNodes.push(xpc.contextNode);\r\n                }\r\n                break;\r\n\r\n            default:\r\n        }\r\n\r\n        return newNodes;\r\n    };\r\n\r\n    function applyStepWithPredicates(step, xpc, node) {\r\n        return PathExpr.applyPredicates(\r\n            step.predicates,\r\n            xpc,\r\n            PathExpr.applyStep(step, xpc, node)\r\n        );\r\n    }\r\n\r\n    function applyStepToNodes(context, nodes, step) {\r\n        return flatten(\r\n            map(\r\n                applyStepWithPredicates.bind(null, step, context),\r\n                nodes\r\n            )\r\n        );\r\n    }\r\n\r\n    PathExpr.applySteps = function (steps, xpc, nodes) {\r\n        return reduce(\r\n            applyStepToNodes.bind(null, xpc),\r\n            nodes,\r\n            steps\r\n        );\r\n    }\r\n\r\n    PathExpr.prototype.applyFilter = function (c, xpc) {\r\n        if (!this.filter) {\r\n            return { nodes: [c.contextNode] };\r\n        }\r\n\r\n        var ns = this.filter.evaluate(c);\r\n\r\n        if (!Utilities.instance_of(ns, XNodeSet)) {\r\n            if (this.filterPredicates != null && this.filterPredicates.length > 0 || this.locationPath != null) {\r\n                throw new Error(\"Path expression filter must evaluate to a nodeset if predicates or location path are used\");\r\n            }\r\n\r\n            return { nonNodes: ns };\r\n        }\r\n\r\n        return {\r\n            nodes: PathExpr.applyPredicates(this.filterPredicates || [], xpc, ns.toUnsortedArray())\r\n        };\r\n    };\r\n\r\n    PathExpr.applyLocationPath = function (locationPath, xpc, nodes) {\r\n        if (!locationPath) {\r\n            return nodes;\r\n        }\r\n\r\n        var startNodes = locationPath.absolute ? [PathExpr.getRoot(xpc, nodes)] : nodes;\r\n\r\n        return PathExpr.applySteps(locationPath.steps, xpc, startNodes);\r\n    };\r\n\r\n    PathExpr.prototype.evaluate = function (c) {\r\n        var xpc = assign(new XPathContext(), c);\r\n\r\n        var filterResult = this.applyFilter(c, xpc);\r\n\r\n        if ('nonNodes' in filterResult) {\r\n            return filterResult.nonNodes;\r\n        }\r\n\r\n        var ns = new XNodeSet();\r\n        ns.addArray(PathExpr.applyLocationPath(this.locationPath, xpc, filterResult.nodes));\r\n        return ns;\r\n    };\r\n\r\n    PathExpr.predicateMatches = function (pred, c) {\r\n        var res = pred.evaluate(c);\r\n\r\n        return Utilities.instance_of(res, XNumber)\r\n            ? c.contextPosition === res.numberValue()\r\n            : res.booleanValue();\r\n    };\r\n\r\n    PathExpr.predicateString = function (predicate) {\r\n        return wrap('[', ']', predicate.toString());\r\n    }\r\n\r\n    PathExpr.predicatesString = function (predicates) {\r\n        return join(\r\n            '',\r\n            map(PathExpr.predicateString, predicates)\r\n        );\r\n    }\r\n\r\n    PathExpr.prototype.toString = function () {\r\n        if (this.filter != undefined) {\r\n            var filterStr = toString(this.filter);\r\n\r\n            if (Utilities.instance_of(this.filter, XString)) {\r\n                return wrap(\"'\", \"'\", filterStr);\r\n            }\r\n            if (this.filterPredicates != undefined && this.filterPredicates.length) {\r\n                return wrap('(', ')', filterStr) +\r\n                    PathExpr.predicatesString(this.filterPredicates);\r\n            }\r\n            if (this.locationPath != undefined) {\r\n                return filterStr +\r\n                    (this.locationPath.absolute ? '' : '/') +\r\n                    toString(this.locationPath);\r\n            }\r\n\r\n            return filterStr;\r\n        }\r\n\r\n        return toString(this.locationPath);\r\n    };\r\n\r\n    PathExpr.getOwnerElement = function (n) {\r\n        // DOM 2 has ownerElement\r\n        if (n.ownerElement) {\r\n            return n.ownerElement;\r\n        }\r\n        // DOM 1 Internet Explorer can use selectSingleNode (ironically)\r\n        try {\r\n            if (n.selectSingleNode) {\r\n                return n.selectSingleNode(\"..\");\r\n            }\r\n        } catch (e) {\r\n        }\r\n        // Other DOM 1 implementations must use this egregious search\r\n        var doc = n.nodeType == 9 /*Node.DOCUMENT_NODE*/\r\n            ? n\r\n            : n.ownerDocument;\r\n        var elts = doc.getElementsByTagName(\"*\");\r\n        for (var i = 0; i < elts.length; i++) {\r\n            var elt = elts.item(i);\r\n            var nnm = elt.attributes;\r\n            for (var j = 0; j < nnm.length; j++) {\r\n                var an = nnm.item(j);\r\n                if (an === n) {\r\n                    return elt;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // LocationPath //////////////////////////////////////////////////////////////\r\n\r\n    LocationPath.prototype = new Object();\r\n    LocationPath.prototype.constructor = LocationPath;\r\n    LocationPath.superclass = Object.prototype;\r\n\r\n    function LocationPath(abs, steps) {\r\n        if (arguments.length > 0) {\r\n            this.init(abs, steps);\r\n        }\r\n    }\r\n\r\n    LocationPath.prototype.init = function (abs, steps) {\r\n        this.absolute = abs;\r\n        this.steps = steps;\r\n    };\r\n\r\n    LocationPath.prototype.toString = function () {\r\n        return (\r\n            (this.absolute ? '/' : '') +\r\n            map(toString, this.steps).join('/')\r\n        );\r\n    };\r\n\r\n    // Step //////////////////////////////////////////////////////////////////////\r\n\r\n    Step.prototype = new Object();\r\n    Step.prototype.constructor = Step;\r\n    Step.superclass = Object.prototype;\r\n\r\n    function Step(axis, nodetest, preds) {\r\n        if (arguments.length > 0) {\r\n            this.init(axis, nodetest, preds);\r\n        }\r\n    }\r\n\r\n    Step.prototype.init = function (axis, nodetest, preds) {\r\n        this.axis = axis;\r\n        this.nodeTest = nodetest;\r\n        this.predicates = preds;\r\n    };\r\n\r\n    Step.prototype.toString = function () {\r\n        return Step.STEPNAMES[this.axis] +\r\n            \"::\" +\r\n            this.nodeTest.toString() +\r\n            PathExpr.predicatesString(this.predicates);\r\n    };\r\n\r\n\r\n    Step.ANCESTOR = 0;\r\n    Step.ANCESTORORSELF = 1;\r\n    Step.ATTRIBUTE = 2;\r\n    Step.CHILD = 3;\r\n    Step.DESCENDANT = 4;\r\n    Step.DESCENDANTORSELF = 5;\r\n    Step.FOLLOWING = 6;\r\n    Step.FOLLOWINGSIBLING = 7;\r\n    Step.NAMESPACE = 8;\r\n    Step.PARENT = 9;\r\n    Step.PRECEDING = 10;\r\n    Step.PRECEDINGSIBLING = 11;\r\n    Step.SELF = 12;\r\n\r\n    Step.STEPNAMES = reduce(function (acc, x) { return acc[x[0]] = x[1], acc; }, {}, [\r\n        [Step.ANCESTOR, 'ancestor'],\r\n        [Step.ANCESTORORSELF, 'ancestor-or-self'],\r\n        [Step.ATTRIBUTE, 'attribute'],\r\n        [Step.CHILD, 'child'],\r\n        [Step.DESCENDANT, 'descendant'],\r\n        [Step.DESCENDANTORSELF, 'descendant-or-self'],\r\n        [Step.FOLLOWING, 'following'],\r\n        [Step.FOLLOWINGSIBLING, 'following-sibling'],\r\n        [Step.NAMESPACE, 'namespace'],\r\n        [Step.PARENT, 'parent'],\r\n        [Step.PRECEDING, 'preceding'],\r\n        [Step.PRECEDINGSIBLING, 'preceding-sibling'],\r\n        [Step.SELF, 'self']\r\n    ]);\r\n\r\n    // NodeTest //////////////////////////////////////////////////////////////////\r\n\r\n    NodeTest.prototype = new Object();\r\n    NodeTest.prototype.constructor = NodeTest;\r\n    NodeTest.superclass = Object.prototype;\r\n\r\n    function NodeTest(type, value) {\r\n        if (arguments.length > 0) {\r\n            this.init(type, value);\r\n        }\r\n    }\r\n\r\n    NodeTest.prototype.init = function (type, value) {\r\n        this.type = type;\r\n        this.value = value;\r\n    };\r\n\r\n    NodeTest.prototype.toString = function () {\r\n        return \"<unknown nodetest type>\";\r\n    };\r\n\r\n    NodeTest.prototype.matches = function (n, xpc) {\r\n        console.warn('unknown node test type');\r\n    };\r\n\r\n    NodeTest.NAMETESTANY = 0;\r\n    NodeTest.NAMETESTPREFIXANY = 1;\r\n    NodeTest.NAMETESTQNAME = 2;\r\n    NodeTest.COMMENT = 3;\r\n    NodeTest.TEXT = 4;\r\n    NodeTest.PI = 5;\r\n    NodeTest.NODE = 6;\r\n\r\n    NodeTest.isNodeType = function (types) {\r\n        return function (node) {\r\n            return includes(types, node.nodeType);\r\n        };\r\n    };\r\n\r\n    NodeTest.makeNodeTestType = function (type, members, ctor) {\r\n        var newType = ctor || function () { };\r\n\r\n        newType.prototype = new NodeTest(type);\r\n        newType.prototype.constructor = newType;\r\n\r\n        assign(newType.prototype, members);\r\n\r\n        return newType;\r\n    };\r\n    // create invariant node test for certain node types\r\n    NodeTest.makeNodeTypeTest = function (type, nodeTypes, stringVal) {\r\n        return new (NodeTest.makeNodeTestType(type, {\r\n            matches: NodeTest.isNodeType(nodeTypes),\r\n            toString: always(stringVal)\r\n        }))();\r\n    };\r\n\r\n    NodeTest.hasPrefix = function (node) {\r\n        return node.prefix || (node.nodeName || node.tagName).indexOf(':') !== -1;\r\n    };\r\n\r\n    NodeTest.isElementOrAttribute = NodeTest.isNodeType([1, 2]);\r\n    NodeTest.nameSpaceMatches = function (prefix, xpc, n) {\r\n        var nNamespace = (n.namespaceURI || '');\r\n\r\n        if (!prefix) {\r\n            return !nNamespace || (xpc.allowAnyNamespaceForNoPrefix && !NodeTest.hasPrefix(n));\r\n        }\r\n\r\n        var ns = xpc.namespaceResolver.getNamespace(prefix, xpc.expressionContextNode);\r\n\r\n        if (ns == null) {\r\n            throw new Error(\"Cannot resolve QName \" + prefix);\r\n        }\r\n\r\n        return ns === nNamespace;\r\n    };\r\n    NodeTest.localNameMatches = function (localName, xpc, n) {\r\n        var nLocalName = (n.localName || n.nodeName);\r\n\r\n        return xpc.caseInsensitive\r\n            ? localName.toLowerCase() === nLocalName.toLowerCase()\r\n            : localName === nLocalName;\r\n    };\r\n\r\n    NodeTest.NameTestPrefixAny = NodeTest.makeNodeTestType(\r\n        NodeTest.NAMETESTPREFIXANY,\r\n        {\r\n            matches: function (n, xpc) {\r\n                return NodeTest.isElementOrAttribute(n) &&\r\n                    NodeTest.nameSpaceMatches(this.prefix, xpc, n);\r\n            },\r\n            toString: function () {\r\n                return this.prefix + \":*\";\r\n            }\r\n        },\r\n        function NameTestPrefixAny(prefix) { this.prefix = prefix; }\r\n    );\r\n\r\n    NodeTest.NameTestQName = NodeTest.makeNodeTestType(\r\n        NodeTest.NAMETESTQNAME,\r\n        {\r\n            matches: function (n, xpc) {\r\n                return NodeTest.isNodeType([1, 2, XPathNamespace.XPATH_NAMESPACE_NODE])(n) &&\r\n                    NodeTest.nameSpaceMatches(this.prefix, xpc, n) &&\r\n                    NodeTest.localNameMatches(this.localName, xpc, n);\r\n            },\r\n            toString: function () {\r\n                return this.name;\r\n            }\r\n        },\r\n        function NameTestQName(name) {\r\n            var nameParts = name.split(':');\r\n\r\n            this.name = name;\r\n            this.prefix = nameParts.length > 1 ? nameParts[0] : null;\r\n            this.localName = nameParts[nameParts.length > 1 ? 1 : 0];\r\n        }\r\n    );\r\n\r\n    NodeTest.PITest = NodeTest.makeNodeTestType(NodeTest.PI, {\r\n        matches: function (n, xpc) {\r\n            return NodeTest.isNodeType([7])(n) && (n.target || n.nodeName) === this.name;\r\n        },\r\n        toString: function () {\r\n            return wrap('processing-instruction(\"', '\")', this.name);\r\n        }\r\n    }, function (name) { this.name = name; })\r\n\r\n    // singletons\r\n\r\n    // elements, attributes, namespaces\r\n    NodeTest.nameTestAny = NodeTest.makeNodeTypeTest(NodeTest.NAMETESTANY, [1, 2, XPathNamespace.XPATH_NAMESPACE_NODE], '*');\r\n    // text, cdata\r\n    NodeTest.textTest = NodeTest.makeNodeTypeTest(NodeTest.TEXT, [3, 4], 'text()');\r\n    NodeTest.commentTest = NodeTest.makeNodeTypeTest(NodeTest.COMMENT, [8], 'comment()');\r\n    // elements, attributes, text, cdata, PIs, comments, document nodes\r\n    NodeTest.nodeTest = NodeTest.makeNodeTypeTest(NodeTest.NODE, [1, 2, 3, 4, 7, 8, 9], 'node()');\r\n    NodeTest.anyPiTest = NodeTest.makeNodeTypeTest(NodeTest.PI, [7], 'processing-instruction()');\r\n\r\n    // VariableReference /////////////////////////////////////////////////////////\r\n\r\n    VariableReference.prototype = new Expression();\r\n    VariableReference.prototype.constructor = VariableReference;\r\n    VariableReference.superclass = Expression.prototype;\r\n\r\n    function VariableReference(v) {\r\n        if (arguments.length > 0) {\r\n            this.init(v);\r\n        }\r\n    }\r\n\r\n    VariableReference.prototype.init = function (v) {\r\n        this.variable = v;\r\n    };\r\n\r\n    VariableReference.prototype.toString = function () {\r\n        return \"$\" + this.variable;\r\n    };\r\n\r\n    VariableReference.prototype.evaluate = function (c) {\r\n        var parts = Utilities.resolveQName(this.variable, c.namespaceResolver, c.contextNode, false);\r\n\r\n        if (parts[0] == null) {\r\n            throw new Error(\"Cannot resolve QName \" + fn);\r\n        }\r\n        var result = c.variableResolver.getVariable(parts[1], parts[0]);\r\n        if (!result) {\r\n            throw XPathException.fromMessage(\"Undeclared variable: \" + this.toString());\r\n        }\r\n        return result;\r\n    };\r\n\r\n    // FunctionCall //////////////////////////////////////////////////////////////\r\n\r\n    FunctionCall.prototype = new Expression();\r\n    FunctionCall.prototype.constructor = FunctionCall;\r\n    FunctionCall.superclass = Expression.prototype;\r\n\r\n    function FunctionCall(fn, args) {\r\n        if (arguments.length > 0) {\r\n            this.init(fn, args);\r\n        }\r\n    }\r\n\r\n    FunctionCall.prototype.init = function (fn, args) {\r\n        this.functionName = fn;\r\n        this.arguments = args;\r\n    };\r\n\r\n    FunctionCall.prototype.toString = function () {\r\n        var s = this.functionName + \"(\";\r\n        for (var i = 0; i < this.arguments.length; i++) {\r\n            if (i > 0) {\r\n                s += \", \";\r\n            }\r\n            s += this.arguments[i].toString();\r\n        }\r\n        return s + \")\";\r\n    };\r\n\r\n    FunctionCall.prototype.evaluate = function (c) {\r\n        var f = FunctionResolver.getFunctionFromContext(this.functionName, c);\r\n\r\n        if (!f) {\r\n            throw new Error(\"Unknown function \" + this.functionName);\r\n        }\r\n\r\n        var a = [c].concat(this.arguments);\r\n        return f.apply(c.functionResolver.thisArg, a);\r\n    };\r\n\r\n    // Operators /////////////////////////////////////////////////////////////////\r\n\r\n    var Operators = new Object();\r\n\r\n    Operators.equals = function (l, r) {\r\n        return l.equals(r);\r\n    };\r\n\r\n    Operators.notequal = function (l, r) {\r\n        return l.notequal(r);\r\n    };\r\n\r\n    Operators.lessthan = function (l, r) {\r\n        return l.lessthan(r);\r\n    };\r\n\r\n    Operators.greaterthan = function (l, r) {\r\n        return l.greaterthan(r);\r\n    };\r\n\r\n    Operators.lessthanorequal = function (l, r) {\r\n        return l.lessthanorequal(r);\r\n    };\r\n\r\n    Operators.greaterthanorequal = function (l, r) {\r\n        return l.greaterthanorequal(r);\r\n    };\r\n\r\n    // XString ///////////////////////////////////////////////////////////////////\r\n\r\n    XString.prototype = new Expression();\r\n    XString.prototype.constructor = XString;\r\n    XString.superclass = Expression.prototype;\r\n\r\n    function XString(s) {\r\n        if (arguments.length > 0) {\r\n            this.init(s);\r\n        }\r\n    }\r\n\r\n    XString.prototype.init = function (s) {\r\n        this.str = String(s);\r\n    };\r\n\r\n    XString.prototype.toString = function () {\r\n        return this.str;\r\n    };\r\n\r\n    XString.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XString.prototype.string = function () {\r\n        return this;\r\n    };\r\n\r\n    XString.prototype.number = function () {\r\n        return new XNumber(this.str);\r\n    };\r\n\r\n    XString.prototype.bool = function () {\r\n        return new XBoolean(this.str);\r\n    };\r\n\r\n    XString.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert string to nodeset\");\r\n    };\r\n\r\n    XString.prototype.stringValue = function () {\r\n        return this.str;\r\n    };\r\n\r\n    XString.prototype.numberValue = function () {\r\n        return this.number().numberValue();\r\n    };\r\n\r\n    XString.prototype.booleanValue = function () {\r\n        return this.bool().booleanValue();\r\n    };\r\n\r\n    XString.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.number().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithString(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.str == r.str);\r\n    };\r\n\r\n    XString.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.number().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithString(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.str != r.str);\r\n    };\r\n\r\n    XString.prototype.lessthan = function (r) {\r\n        return this.number().lessthan(r);\r\n    };\r\n\r\n    XString.prototype.greaterthan = function (r) {\r\n        return this.number().greaterthan(r);\r\n    };\r\n\r\n    XString.prototype.lessthanorequal = function (r) {\r\n        return this.number().lessthanorequal(r);\r\n    };\r\n\r\n    XString.prototype.greaterthanorequal = function (r) {\r\n        return this.number().greaterthanorequal(r);\r\n    };\r\n\r\n    // XNumber ///////////////////////////////////////////////////////////////////\r\n\r\n    XNumber.prototype = new Expression();\r\n    XNumber.prototype.constructor = XNumber;\r\n    XNumber.superclass = Expression.prototype;\r\n\r\n    function XNumber(n) {\r\n        if (arguments.length > 0) {\r\n            this.init(n);\r\n        }\r\n    }\r\n\r\n    XNumber.prototype.init = function (n) {\r\n        this.num = typeof n === \"string\" ? this.parse(n) : Number(n);\r\n    };\r\n\r\n    XNumber.prototype.numberFormat = /^\\s*-?[0-9]*\\.?[0-9]+\\s*$/;\r\n\r\n    XNumber.prototype.parse = function (s) {\r\n        // XPath representation of numbers is more restrictive than what Number() or parseFloat() allow\r\n        return this.numberFormat.test(s) ? parseFloat(s) : Number.NaN;\r\n    };\r\n\r\n    function padSmallNumber(numberStr) {\r\n        var parts = numberStr.split('e-');\r\n        var base = parts[0].replace('.', '');\r\n        var exponent = Number(parts[1]);\r\n\r\n        for (var i = 0; i < exponent - 1; i += 1) {\r\n            base = '0' + base;\r\n        }\r\n\r\n        return '0.' + base;\r\n    }\r\n\r\n    function padLargeNumber(numberStr) {\r\n        var parts = numberStr.split('e');\r\n        var base = parts[0].replace('.', '');\r\n        var exponent = Number(parts[1]);\r\n        var zerosToAppend = exponent + 1 - base.length;\r\n\r\n        for (var i = 0; i < zerosToAppend; i += 1) {\r\n            base += '0';\r\n        }\r\n\r\n        return base;\r\n    }\r\n\r\n    XNumber.prototype.toString = function () {\r\n        var strValue = this.num.toString();\r\n\r\n        if (strValue.indexOf('e-') !== -1) {\r\n            return padSmallNumber(strValue);\r\n        }\r\n\r\n        if (strValue.indexOf('e') !== -1) {\r\n            return padLargeNumber(strValue);\r\n        }\r\n\r\n        return strValue;\r\n    };\r\n\r\n    XNumber.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XNumber.prototype.string = function () {\r\n\r\n\r\n        return new XString(this.toString());\r\n    };\r\n\r\n    XNumber.prototype.number = function () {\r\n        return this;\r\n    };\r\n\r\n    XNumber.prototype.bool = function () {\r\n        return new XBoolean(this.num);\r\n    };\r\n\r\n    XNumber.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert number to nodeset\");\r\n    };\r\n\r\n    XNumber.prototype.stringValue = function () {\r\n        return this.string().stringValue();\r\n    };\r\n\r\n    XNumber.prototype.numberValue = function () {\r\n        return this.num;\r\n    };\r\n\r\n    XNumber.prototype.booleanValue = function () {\r\n        return this.bool().booleanValue();\r\n    };\r\n\r\n    XNumber.prototype.negate = function () {\r\n        return new XNumber(-this.num);\r\n    };\r\n\r\n    XNumber.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().equals(r);\r\n        }\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.equals(r.number());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.num == r.num);\r\n    };\r\n\r\n    XNumber.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.bool().notequal(r);\r\n        }\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.notequal(r.number());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.num != r.num);\r\n    };\r\n\r\n    XNumber.prototype.lessthan = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.greaterthan);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.lessthan(r.number());\r\n        }\r\n        return new XBoolean(this.num < r.num);\r\n    };\r\n\r\n    XNumber.prototype.greaterthan = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.lessthan);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.greaterthan(r.number());\r\n        }\r\n        return new XBoolean(this.num > r.num);\r\n    };\r\n\r\n    XNumber.prototype.lessthanorequal = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.greaterthanorequal);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.lessthanorequal(r.number());\r\n        }\r\n        return new XBoolean(this.num <= r.num);\r\n    };\r\n\r\n    XNumber.prototype.greaterthanorequal = function (r) {\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithNumber(this, Operators.lessthanorequal);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean) || Utilities.instance_of(r, XString)) {\r\n            return this.greaterthanorequal(r.number());\r\n        }\r\n        return new XBoolean(this.num >= r.num);\r\n    };\r\n\r\n    XNumber.prototype.plus = function (r) {\r\n        return new XNumber(this.num + r.num);\r\n    };\r\n\r\n    XNumber.prototype.minus = function (r) {\r\n        return new XNumber(this.num - r.num);\r\n    };\r\n\r\n    XNumber.prototype.multiply = function (r) {\r\n        return new XNumber(this.num * r.num);\r\n    };\r\n\r\n    XNumber.prototype.div = function (r) {\r\n        return new XNumber(this.num / r.num);\r\n    };\r\n\r\n    XNumber.prototype.mod = function (r) {\r\n        return new XNumber(this.num % r.num);\r\n    };\r\n\r\n    // XBoolean //////////////////////////////////////////////////////////////////\r\n\r\n    XBoolean.prototype = new Expression();\r\n    XBoolean.prototype.constructor = XBoolean;\r\n    XBoolean.superclass = Expression.prototype;\r\n\r\n    function XBoolean(b) {\r\n        if (arguments.length > 0) {\r\n            this.init(b);\r\n        }\r\n    }\r\n\r\n    XBoolean.prototype.init = function (b) {\r\n        this.b = Boolean(b);\r\n    };\r\n\r\n    XBoolean.prototype.toString = function () {\r\n        return this.b.toString();\r\n    };\r\n\r\n    XBoolean.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XBoolean.prototype.string = function () {\r\n        return new XString(this.b);\r\n    };\r\n\r\n    XBoolean.prototype.number = function () {\r\n        return new XNumber(this.b);\r\n    };\r\n\r\n    XBoolean.prototype.bool = function () {\r\n        return this;\r\n    };\r\n\r\n    XBoolean.prototype.nodeset = function () {\r\n        throw new Error(\"Cannot convert boolean to nodeset\");\r\n    };\r\n\r\n    XBoolean.prototype.stringValue = function () {\r\n        return this.string().stringValue();\r\n    };\r\n\r\n    XBoolean.prototype.numberValue = function () {\r\n        return this.number().numberValue();\r\n    };\r\n\r\n    XBoolean.prototype.booleanValue = function () {\r\n        return this.b;\r\n    };\r\n\r\n    XBoolean.prototype.not = function () {\r\n        return new XBoolean(!this.b);\r\n    };\r\n\r\n    XBoolean.prototype.equals = function (r) {\r\n        if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\r\n            return this.equals(r.bool());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithBoolean(this, Operators.equals);\r\n        }\r\n        return new XBoolean(this.b == r.b);\r\n    };\r\n\r\n    XBoolean.prototype.notequal = function (r) {\r\n        if (Utilities.instance_of(r, XString) || Utilities.instance_of(r, XNumber)) {\r\n            return this.notequal(r.bool());\r\n        }\r\n        if (Utilities.instance_of(r, XNodeSet)) {\r\n            return r.compareWithBoolean(this, Operators.notequal);\r\n        }\r\n        return new XBoolean(this.b != r.b);\r\n    };\r\n\r\n    XBoolean.prototype.lessthan = function (r) {\r\n        return this.number().lessthan(r);\r\n    };\r\n\r\n    XBoolean.prototype.greaterthan = function (r) {\r\n        return this.number().greaterthan(r);\r\n    };\r\n\r\n    XBoolean.prototype.lessthanorequal = function (r) {\r\n        return this.number().lessthanorequal(r);\r\n    };\r\n\r\n    XBoolean.prototype.greaterthanorequal = function (r) {\r\n        return this.number().greaterthanorequal(r);\r\n    };\r\n\r\n    XBoolean.true_ = new XBoolean(true);\r\n    XBoolean.false_ = new XBoolean(false);\r\n\r\n    // AVLTree ///////////////////////////////////////////////////////////////////\r\n\r\n    AVLTree.prototype = new Object();\r\n    AVLTree.prototype.constructor = AVLTree;\r\n    AVLTree.superclass = Object.prototype;\r\n\r\n    function AVLTree(n) {\r\n        this.init(n);\r\n    }\r\n\r\n    AVLTree.prototype.init = function (n) {\r\n        this.left = null;\r\n        this.right = null;\r\n        this.node = n;\r\n        this.depth = 1;\r\n    };\r\n\r\n    AVLTree.prototype.balance = function () {\r\n        var ldepth = this.left == null ? 0 : this.left.depth;\r\n        var rdepth = this.right == null ? 0 : this.right.depth;\r\n\r\n        if (ldepth > rdepth + 1) {\r\n            // LR or LL rotation\r\n            var lldepth = this.left.left == null ? 0 : this.left.left.depth;\r\n            var lrdepth = this.left.right == null ? 0 : this.left.right.depth;\r\n\r\n            if (lldepth < lrdepth) {\r\n                // LR rotation consists of a RR rotation of the left child\r\n                this.left.rotateRR();\r\n                // plus a LL rotation of this node, which happens anyway\r\n            }\r\n            this.rotateLL();\r\n        } else if (ldepth + 1 < rdepth) {\r\n            // RR or RL rorarion\r\n            var rrdepth = this.right.right == null ? 0 : this.right.right.depth;\r\n            var rldepth = this.right.left == null ? 0 : this.right.left.depth;\r\n\r\n            if (rldepth > rrdepth) {\r\n                // RR rotation consists of a LL rotation of the right child\r\n                this.right.rotateLL();\r\n                // plus a RR rotation of this node, which happens anyway\r\n            }\r\n            this.rotateRR();\r\n        }\r\n    };\r\n\r\n    AVLTree.prototype.rotateLL = function () {\r\n        // the left side is too long => rotate from the left (_not_ leftwards)\r\n        var nodeBefore = this.node;\r\n        var rightBefore = this.right;\r\n        this.node = this.left.node;\r\n        this.right = this.left;\r\n        this.left = this.left.left;\r\n        this.right.left = this.right.right;\r\n        this.right.right = rightBefore;\r\n        this.right.node = nodeBefore;\r\n        this.right.updateInNewLocation();\r\n        this.updateInNewLocation();\r\n    };\r\n\r\n    AVLTree.prototype.rotateRR = function () {\r\n        // the right side is too long => rotate from the right (_not_ rightwards)\r\n        var nodeBefore = this.node;\r\n        var leftBefore = this.left;\r\n        this.node = this.right.node;\r\n        this.left = this.right;\r\n        this.right = this.right.right;\r\n        this.left.right = this.left.left;\r\n        this.left.left = leftBefore;\r\n        this.left.node = nodeBefore;\r\n        this.left.updateInNewLocation();\r\n        this.updateInNewLocation();\r\n    };\r\n\r\n    AVLTree.prototype.updateInNewLocation = function () {\r\n        this.getDepthFromChildren();\r\n    };\r\n\r\n    AVLTree.prototype.getDepthFromChildren = function () {\r\n        this.depth = this.node == null ? 0 : 1;\r\n        if (this.left != null) {\r\n            this.depth = this.left.depth + 1;\r\n        }\r\n        if (this.right != null && this.depth <= this.right.depth) {\r\n            this.depth = this.right.depth + 1;\r\n        }\r\n    };\r\n\r\n    function nodeOrder(n1, n2) {\r\n        if (n1 === n2) {\r\n            return 0;\r\n        }\r\n\r\n        if (n1.compareDocumentPosition) {\r\n            var cpos = n1.compareDocumentPosition(n2);\r\n\r\n            if (cpos & 0x01) {\r\n                // not in the same document; return an arbitrary result (is there a better way to do this)\r\n                return 1;\r\n            }\r\n            if (cpos & 0x0A) {\r\n                // n2 precedes or contains n1\r\n                return 1;\r\n            }\r\n            if (cpos & 0x14) {\r\n                // n2 follows or is contained by n1\r\n                return -1;\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        var d1 = 0,\r\n            d2 = 0;\r\n        for (var m1 = n1; m1 != null; m1 = m1.parentNode || m1.ownerElement) {\r\n            d1++;\r\n        }\r\n        for (var m2 = n2; m2 != null; m2 = m2.parentNode || m2.ownerElement) {\r\n            d2++;\r\n        }\r\n\r\n        // step up to same depth\r\n        if (d1 > d2) {\r\n            while (d1 > d2) {\r\n                n1 = n1.parentNode || n1.ownerElement;\r\n                d1--;\r\n            }\r\n            if (n1 === n2) {\r\n                return 1;\r\n            }\r\n        } else if (d2 > d1) {\r\n            while (d2 > d1) {\r\n                n2 = n2.parentNode || n2.ownerElement;\r\n                d2--;\r\n            }\r\n            if (n1 === n2) {\r\n                return -1;\r\n            }\r\n        }\r\n\r\n        var n1Par = n1.parentNode || n1.ownerElement,\r\n            n2Par = n2.parentNode || n2.ownerElement;\r\n\r\n        // find common parent\r\n        while (n1Par !== n2Par) {\r\n            n1 = n1Par;\r\n            n2 = n2Par;\r\n            n1Par = n1.parentNode || n1.ownerElement;\r\n            n2Par = n2.parentNode || n2.ownerElement;\r\n        }\r\n\r\n        var n1isAttr = Utilities.isAttribute(n1);\r\n        var n2isAttr = Utilities.isAttribute(n2);\r\n\r\n        if (n1isAttr && !n2isAttr) {\r\n            return -1;\r\n        }\r\n        if (!n1isAttr && n2isAttr) {\r\n            return 1;\r\n        }\r\n\r\n        if (n1Par) {\r\n            var cn = n1isAttr ? n1Par.attributes : n1Par.childNodes,\r\n                len = cn.length;\r\n            for (var i = 0; i < len; i += 1) {\r\n                var n = cn[i];\r\n                if (n === n1) {\r\n                    return -1;\r\n                }\r\n                if (n === n2) {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        throw new Error('Unexpected: could not determine node order');\r\n    }\r\n\r\n    AVLTree.prototype.add = function (n) {\r\n        if (n === this.node) {\r\n            return false;\r\n        }\r\n\r\n        var o = nodeOrder(n, this.node);\r\n\r\n        var ret = false;\r\n        if (o == -1) {\r\n            if (this.left == null) {\r\n                this.left = new AVLTree(n);\r\n                ret = true;\r\n            } else {\r\n                ret = this.left.add(n);\r\n                if (ret) {\r\n                    this.balance();\r\n                }\r\n            }\r\n        } else if (o == 1) {\r\n            if (this.right == null) {\r\n                this.right = new AVLTree(n);\r\n                ret = true;\r\n            } else {\r\n                ret = this.right.add(n);\r\n                if (ret) {\r\n                    this.balance();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ret) {\r\n            this.getDepthFromChildren();\r\n        }\r\n        return ret;\r\n    };\r\n\r\n    // XNodeSet //////////////////////////////////////////////////////////////////\r\n\r\n    XNodeSet.prototype = new Expression();\r\n    XNodeSet.prototype.constructor = XNodeSet;\r\n    XNodeSet.superclass = Expression.prototype;\r\n\r\n    function XNodeSet() {\r\n        this.init();\r\n    }\r\n\r\n    XNodeSet.prototype.init = function () {\r\n        this.tree = null;\r\n        this.nodes = [];\r\n        this.size = 0;\r\n    };\r\n\r\n    XNodeSet.prototype.toString = function () {\r\n        var p = this.first();\r\n        if (p == null) {\r\n            return \"\";\r\n        }\r\n        return this.stringForNode(p);\r\n    };\r\n\r\n    XNodeSet.prototype.evaluate = function (c) {\r\n        return this;\r\n    };\r\n\r\n    XNodeSet.prototype.string = function () {\r\n        return new XString(this.toString());\r\n    };\r\n\r\n    XNodeSet.prototype.stringValue = function () {\r\n        return this.toString();\r\n    };\r\n\r\n    XNodeSet.prototype.number = function () {\r\n        return new XNumber(this.string());\r\n    };\r\n\r\n    XNodeSet.prototype.numberValue = function () {\r\n        return Number(this.string());\r\n    };\r\n\r\n    XNodeSet.prototype.bool = function () {\r\n        return new XBoolean(this.booleanValue());\r\n    };\r\n\r\n    XNodeSet.prototype.booleanValue = function () {\r\n        return !!this.size;\r\n    };\r\n\r\n    XNodeSet.prototype.nodeset = function () {\r\n        return this;\r\n    };\r\n\r\n    XNodeSet.prototype.stringForNode = function (n) {\r\n        if (n.nodeType == 9   /*Node.DOCUMENT_NODE*/ ||\r\n            n.nodeType == 1   /*Node.ELEMENT_NODE */ ||\r\n            n.nodeType === 11 /*Node.DOCUMENT_FRAGMENT*/) {\r\n            return this.stringForContainerNode(n);\r\n        }\r\n        if (n.nodeType === 2 /* Node.ATTRIBUTE_NODE */) {\r\n            return n.value || n.nodeValue;\r\n        }\r\n        if (n.isNamespaceNode) {\r\n            return n.namespace;\r\n        }\r\n        return n.nodeValue;\r\n    };\r\n\r\n    XNodeSet.prototype.stringForContainerNode = function (n) {\r\n        var s = \"\";\r\n        for (var n2 = n.firstChild; n2 != null; n2 = n2.nextSibling) {\r\n            var nt = n2.nodeType;\r\n            //  Element,    Text,       CDATA,      Document,   Document Fragment\r\n            if (nt === 1 || nt === 3 || nt === 4 || nt === 9 || nt === 11) {\r\n                s += this.stringForNode(n2);\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n\r\n    XNodeSet.prototype.buildTree = function () {\r\n        if (!this.tree && this.nodes.length) {\r\n            this.tree = new AVLTree(this.nodes[0]);\r\n            for (var i = 1; i < this.nodes.length; i += 1) {\r\n                this.tree.add(this.nodes[i]);\r\n            }\r\n        }\r\n\r\n        return this.tree;\r\n    };\r\n\r\n    XNodeSet.prototype.first = function () {\r\n        var p = this.buildTree();\r\n        if (p == null) {\r\n            return null;\r\n        }\r\n        while (p.left != null) {\r\n            p = p.left;\r\n        }\r\n        return p.node;\r\n    };\r\n\r\n    XNodeSet.prototype.add = function (n) {\r\n        for (var i = 0; i < this.nodes.length; i += 1) {\r\n            if (n === this.nodes[i]) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.tree = null;\r\n        this.nodes.push(n);\r\n        this.size += 1;\r\n    };\r\n\r\n    XNodeSet.prototype.addArray = function (ns) {\r\n        var self = this;\r\n\r\n        forEach(function (x) { self.add(x); }, ns);\r\n    };\r\n\r\n    /**\r\n     * Returns an array of the node set's contents in document order\r\n     */\r\n    XNodeSet.prototype.toArray = function () {\r\n        var a = [];\r\n        this.toArrayRec(this.buildTree(), a);\r\n        return a;\r\n    };\r\n\r\n    XNodeSet.prototype.toArrayRec = function (t, a) {\r\n        if (t != null) {\r\n            this.toArrayRec(t.left, a);\r\n            a.push(t.node);\r\n            this.toArrayRec(t.right, a);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns an array of the node set's contents in arbitrary order\r\n     */\r\n    XNodeSet.prototype.toUnsortedArray = function () {\r\n        return this.nodes.slice();\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithString = function (r, o) {\r\n        var a = this.toUnsortedArray();\r\n        for (var i = 0; i < a.length; i++) {\r\n            var n = a[i];\r\n            var l = new XString(this.stringForNode(n));\r\n            var res = o(l, r);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithNumber = function (r, o) {\r\n        var a = this.toUnsortedArray();\r\n        for (var i = 0; i < a.length; i++) {\r\n            var n = a[i];\r\n            var l = new XNumber(this.stringForNode(n));\r\n            var res = o(l, r);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithBoolean = function (r, o) {\r\n        return o(this.bool(), r);\r\n    };\r\n\r\n    XNodeSet.prototype.compareWithNodeSet = function (r, o) {\r\n        var arr = this.toUnsortedArray();\r\n        var oInvert = function (lop, rop) { return o(rop, lop); };\r\n\r\n        for (var i = 0; i < arr.length; i++) {\r\n            var l = new XString(this.stringForNode(arr[i]));\r\n\r\n            var res = r.compareWithString(l, oInvert);\r\n            if (res.booleanValue()) {\r\n                return res;\r\n            }\r\n        }\r\n\r\n        return new XBoolean(false);\r\n    };\r\n\r\n    XNodeSet.compareWith = curry(function (o, r) {\r\n        if (Utilities.instance_of(r, XString)) {\r\n            return this.compareWithString(r, o);\r\n        }\r\n        if (Utilities.instance_of(r, XNumber)) {\r\n            return this.compareWithNumber(r, o);\r\n        }\r\n        if (Utilities.instance_of(r, XBoolean)) {\r\n            return this.compareWithBoolean(r, o);\r\n        }\r\n        return this.compareWithNodeSet(r, o);\r\n    });\r\n\r\n    XNodeSet.prototype.equals = XNodeSet.compareWith(Operators.equals);\r\n    XNodeSet.prototype.notequal = XNodeSet.compareWith(Operators.notequal);\r\n    XNodeSet.prototype.lessthan = XNodeSet.compareWith(Operators.lessthan);\r\n    XNodeSet.prototype.greaterthan = XNodeSet.compareWith(Operators.greaterthan);\r\n    XNodeSet.prototype.lessthanorequal = XNodeSet.compareWith(Operators.lessthanorequal);\r\n    XNodeSet.prototype.greaterthanorequal = XNodeSet.compareWith(Operators.greaterthanorequal);\r\n\r\n    XNodeSet.prototype.union = function (r) {\r\n        var ns = new XNodeSet();\r\n        ns.addArray(this.toUnsortedArray());\r\n        ns.addArray(r.toUnsortedArray());\r\n        return ns;\r\n    };\r\n\r\n    // XPathNamespace ////////////////////////////////////////////////////////////\r\n\r\n    XPathNamespace.prototype = new Object();\r\n    XPathNamespace.prototype.constructor = XPathNamespace;\r\n    XPathNamespace.superclass = Object.prototype;\r\n\r\n    function XPathNamespace(pre, ns, p) {\r\n        this.isXPathNamespace = true;\r\n        this.ownerDocument = p.ownerDocument;\r\n        this.nodeName = \"#namespace\";\r\n        this.prefix = pre;\r\n        this.localName = pre;\r\n        this.namespaceURI = ns;\r\n        this.nodeValue = ns;\r\n        this.ownerElement = p;\r\n        this.nodeType = XPathNamespace.XPATH_NAMESPACE_NODE;\r\n    }\r\n\r\n    XPathNamespace.prototype.toString = function () {\r\n        return \"{ \\\"\" + this.prefix + \"\\\", \\\"\" + this.namespaceURI + \"\\\" }\";\r\n    };\r\n\r\n    // XPathContext //////////////////////////////////////////////////////////////\r\n\r\n    XPathContext.prototype = new Object();\r\n    XPathContext.prototype.constructor = XPathContext;\r\n    XPathContext.superclass = Object.prototype;\r\n\r\n    function XPathContext(vr, nr, fr) {\r\n        this.variableResolver = vr != null ? vr : new VariableResolver();\r\n        this.namespaceResolver = nr != null ? nr : new NamespaceResolver();\r\n        this.functionResolver = fr != null ? fr : new FunctionResolver();\r\n    }\r\n\r\n    XPathContext.prototype.extend = function (newProps) {\r\n        return assign(new XPathContext(), this, newProps);\r\n    };\r\n\r\n    // VariableResolver //////////////////////////////////////////////////////////\r\n\r\n    VariableResolver.prototype = new Object();\r\n    VariableResolver.prototype.constructor = VariableResolver;\r\n    VariableResolver.superclass = Object.prototype;\r\n\r\n    function VariableResolver() {\r\n    }\r\n\r\n    VariableResolver.prototype.getVariable = function (ln, ns) {\r\n        return null;\r\n    };\r\n\r\n    // FunctionResolver //////////////////////////////////////////////////////////\r\n\r\n    FunctionResolver.prototype = new Object();\r\n    FunctionResolver.prototype.constructor = FunctionResolver;\r\n    FunctionResolver.superclass = Object.prototype;\r\n\r\n    function FunctionResolver(thisArg) {\r\n        this.thisArg = thisArg != null ? thisArg : Functions;\r\n        this.functions = new Object();\r\n        this.addStandardFunctions();\r\n    }\r\n\r\n    FunctionResolver.prototype.addStandardFunctions = function () {\r\n        this.functions[\"{}last\"] = Functions.last;\r\n        this.functions[\"{}position\"] = Functions.position;\r\n        this.functions[\"{}count\"] = Functions.count;\r\n        this.functions[\"{}id\"] = Functions.id;\r\n        this.functions[\"{}local-name\"] = Functions.localName;\r\n        this.functions[\"{}namespace-uri\"] = Functions.namespaceURI;\r\n        this.functions[\"{}name\"] = Functions.name;\r\n        this.functions[\"{}string\"] = Functions.string;\r\n        this.functions[\"{}concat\"] = Functions.concat;\r\n        this.functions[\"{}starts-with\"] = Functions.startsWith;\r\n        this.functions[\"{}contains\"] = Functions.contains;\r\n        this.functions[\"{}substring-before\"] = Functions.substringBefore;\r\n        this.functions[\"{}substring-after\"] = Functions.substringAfter;\r\n        this.functions[\"{}substring\"] = Functions.substring;\r\n        this.functions[\"{}string-length\"] = Functions.stringLength;\r\n        this.functions[\"{}normalize-space\"] = Functions.normalizeSpace;\r\n        this.functions[\"{}translate\"] = Functions.translate;\r\n        this.functions[\"{}boolean\"] = Functions.boolean_;\r\n        this.functions[\"{}not\"] = Functions.not;\r\n        this.functions[\"{}true\"] = Functions.true_;\r\n        this.functions[\"{}false\"] = Functions.false_;\r\n        this.functions[\"{}lang\"] = Functions.lang;\r\n        this.functions[\"{}number\"] = Functions.number;\r\n        this.functions[\"{}sum\"] = Functions.sum;\r\n        this.functions[\"{}floor\"] = Functions.floor;\r\n        this.functions[\"{}ceiling\"] = Functions.ceiling;\r\n        this.functions[\"{}round\"] = Functions.round;\r\n    };\r\n\r\n    FunctionResolver.prototype.addFunction = function (ns, ln, f) {\r\n        this.functions[\"{\" + ns + \"}\" + ln] = f;\r\n    };\r\n\r\n    FunctionResolver.getFunctionFromContext = function (qName, context) {\r\n        var parts = Utilities.resolveQName(qName, context.namespaceResolver, context.contextNode, false);\r\n\r\n        if (parts[0] === null) {\r\n            throw new Error(\"Cannot resolve QName \" + name);\r\n        }\r\n\r\n        return context.functionResolver.getFunction(parts[1], parts[0]);\r\n    };\r\n\r\n    FunctionResolver.prototype.getFunction = function (localName, namespace) {\r\n        return this.functions[\"{\" + namespace + \"}\" + localName];\r\n    };\r\n\r\n    // NamespaceResolver /////////////////////////////////////////////////////////\r\n\r\n    NamespaceResolver.prototype = new Object();\r\n    NamespaceResolver.prototype.constructor = NamespaceResolver;\r\n    NamespaceResolver.superclass = Object.prototype;\r\n\r\n    function NamespaceResolver() {\r\n    }\r\n\r\n    NamespaceResolver.prototype.getNamespace = function (prefix, n) {\r\n        if (prefix == \"xml\") {\r\n            return XPath.XML_NAMESPACE_URI;\r\n        } else if (prefix == \"xmlns\") {\r\n            return XPath.XMLNS_NAMESPACE_URI;\r\n        }\r\n        if (n.nodeType == 9 /*Node.DOCUMENT_NODE*/) {\r\n            n = n.documentElement;\r\n        } else if (n.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n            n = PathExpr.getOwnerElement(n);\r\n        } else if (n.nodeType != 1 /*Node.ELEMENT_NODE*/) {\r\n            n = n.parentNode;\r\n        }\r\n        while (n != null && n.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n            var nnm = n.attributes;\r\n            for (var i = 0; i < nnm.length; i++) {\r\n                var a = nnm.item(i);\r\n                var aname = a.name || a.nodeName;\r\n                if ((aname === \"xmlns\" && prefix === \"\")\r\n                    || aname === \"xmlns:\" + prefix) {\r\n                    return String(a.value || a.nodeValue);\r\n                }\r\n            }\r\n            n = n.parentNode;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // Functions /////////////////////////////////////////////////////////////////\r\n\r\n    var Functions = new Object();\r\n\r\n    Functions.last = function (c) {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function last expects ()\");\r\n        }\r\n\r\n        return new XNumber(c.contextSize);\r\n    };\r\n\r\n    Functions.position = function (c) {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function position expects ()\");\r\n        }\r\n\r\n        return new XNumber(c.contextPosition);\r\n    };\r\n\r\n    Functions.count = function () {\r\n        var c = arguments[0];\r\n        var ns;\r\n        if (arguments.length != 2 || !Utilities.instance_of(ns = arguments[1].evaluate(c), XNodeSet)) {\r\n            throw new Error(\"Function count expects (node-set)\");\r\n        }\r\n        return new XNumber(ns.size);\r\n    };\r\n\r\n    Functions.id = function () {\r\n        var c = arguments[0];\r\n        var id;\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function id expects (object)\");\r\n        }\r\n        id = arguments[1].evaluate(c);\r\n        if (Utilities.instance_of(id, XNodeSet)) {\r\n            id = id.toArray().join(\" \");\r\n        } else {\r\n            id = id.stringValue();\r\n        }\r\n        var ids = id.split(/[\\x0d\\x0a\\x09\\x20]+/);\r\n        var count = 0;\r\n        var ns = new XNodeSet();\r\n        var doc = c.contextNode.nodeType == 9 /*Node.DOCUMENT_NODE*/\r\n            ? c.contextNode\r\n            : c.contextNode.ownerDocument;\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var n;\r\n            if (doc.getElementById) {\r\n                n = doc.getElementById(ids[i]);\r\n            } else {\r\n                n = Utilities.getElementById(doc, ids[i]);\r\n            }\r\n            if (n != null) {\r\n                ns.add(n);\r\n                count++;\r\n            }\r\n        }\r\n        return ns;\r\n    };\r\n\r\n    Functions.localName = function (c, eNode) {\r\n        var n;\r\n\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = eNode.evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function local-name expects (node-set?)\");\r\n        }\r\n\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n\r\n        return new XString(\r\n            n.localName ||     //  standard elements and attributes\r\n            n.baseName ||     //  IE\r\n            n.target ||     //  processing instructions\r\n            n.nodeName ||     //  DOM1 elements\r\n            \"\"                 //  fallback\r\n        );\r\n    };\r\n\r\n    Functions.namespaceURI = function () {\r\n        var c = arguments[0];\r\n        var n;\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = arguments[1].evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function namespace-uri expects (node-set?)\");\r\n        }\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n        return new XString(n.namespaceURI);\r\n    };\r\n\r\n    Functions.name = function () {\r\n        var c = arguments[0];\r\n        var n;\r\n        if (arguments.length == 1) {\r\n            n = c.contextNode;\r\n        } else if (arguments.length == 2) {\r\n            n = arguments[1].evaluate(c).first();\r\n        } else {\r\n            throw new Error(\"Function name expects (node-set?)\");\r\n        }\r\n        if (n == null) {\r\n            return new XString(\"\");\r\n        }\r\n        if (n.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n            return new XString(n.nodeName);\r\n        } else if (n.nodeType == 2 /*Node.ATTRIBUTE_NODE*/) {\r\n            return new XString(n.name || n.nodeName);\r\n        } else if (n.nodeType === 7 /*Node.PROCESSING_INSTRUCTION_NODE*/) {\r\n            return new XString(n.target || n.nodeName);\r\n        } else if (n.localName == null) {\r\n            return new XString(\"\");\r\n        } else {\r\n            return new XString(n.localName);\r\n        }\r\n    };\r\n\r\n    Functions.string = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length == 1) {\r\n            return new XString(XNodeSet.prototype.stringForNode(c.contextNode));\r\n        } else if (arguments.length == 2) {\r\n            return arguments[1].evaluate(c).string();\r\n        }\r\n        throw new Error(\"Function string expects (object?)\");\r\n    };\r\n\r\n    Functions.concat = function (c) {\r\n        if (arguments.length < 3) {\r\n            throw new Error(\"Function concat expects (string, string[, string]*)\");\r\n        }\r\n        var s = \"\";\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            s += arguments[i].evaluate(c).stringValue();\r\n        }\r\n        return new XString(s);\r\n    };\r\n\r\n    Functions.startsWith = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function startsWith expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XBoolean(s1.substring(0, s2.length) == s2);\r\n    };\r\n\r\n    Functions.contains = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function contains expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XBoolean(s1.indexOf(s2) !== -1);\r\n    };\r\n\r\n    Functions.substringBefore = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function substring-before expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        return new XString(s1.substring(0, s1.indexOf(s2)));\r\n    };\r\n\r\n    Functions.substringAfter = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 3) {\r\n            throw new Error(\"Function substring-after expects (string, string)\");\r\n        }\r\n        var s1 = arguments[1].evaluate(c).stringValue();\r\n        var s2 = arguments[2].evaluate(c).stringValue();\r\n        if (s2.length == 0) {\r\n            return new XString(s1);\r\n        }\r\n        var i = s1.indexOf(s2);\r\n        if (i == -1) {\r\n            return new XString(\"\");\r\n        }\r\n        return new XString(s1.substring(i + s2.length));\r\n    };\r\n\r\n    Functions.substring = function () {\r\n        var c = arguments[0];\r\n        if (!(arguments.length == 3 || arguments.length == 4)) {\r\n            throw new Error(\"Function substring expects (string, number, number?)\");\r\n        }\r\n        var s = arguments[1].evaluate(c).stringValue();\r\n        var n1 = Math.round(arguments[2].evaluate(c).numberValue()) - 1;\r\n        var n2 = arguments.length == 4 ? n1 + Math.round(arguments[3].evaluate(c).numberValue()) : undefined;\r\n        return new XString(s.substring(n1, n2));\r\n    };\r\n\r\n    Functions.stringLength = function () {\r\n        var c = arguments[0];\r\n        var s;\r\n        if (arguments.length == 1) {\r\n            s = XNodeSet.prototype.stringForNode(c.contextNode);\r\n        } else if (arguments.length == 2) {\r\n            s = arguments[1].evaluate(c).stringValue();\r\n        } else {\r\n            throw new Error(\"Function string-length expects (string?)\");\r\n        }\r\n        return new XNumber(s.length);\r\n    };\r\n\r\n    Functions.normalizeSpace = function () {\r\n        var c = arguments[0];\r\n        var s;\r\n        if (arguments.length == 1) {\r\n            s = XNodeSet.prototype.stringForNode(c.contextNode);\r\n        } else if (arguments.length == 2) {\r\n            s = arguments[1].evaluate(c).stringValue();\r\n        } else {\r\n            throw new Error(\"Function normalize-space expects (string?)\");\r\n        }\r\n        var i = 0;\r\n        var j = s.length - 1;\r\n        while (Utilities.isSpace(s.charCodeAt(j))) {\r\n            j--;\r\n        }\r\n        var t = \"\";\r\n        while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\r\n            i++;\r\n        }\r\n        while (i <= j) {\r\n            if (Utilities.isSpace(s.charCodeAt(i))) {\r\n                t += \" \";\r\n                while (i <= j && Utilities.isSpace(s.charCodeAt(i))) {\r\n                    i++;\r\n                }\r\n            } else {\r\n                t += s.charAt(i);\r\n                i++;\r\n            }\r\n        }\r\n        return new XString(t);\r\n    };\r\n\r\n    Functions.translate = function (c, eValue, eFrom, eTo) {\r\n        if (arguments.length != 4) {\r\n            throw new Error(\"Function translate expects (string, string, string)\");\r\n        }\r\n\r\n        var value = eValue.evaluate(c).stringValue();\r\n        var from = eFrom.evaluate(c).stringValue();\r\n        var to = eTo.evaluate(c).stringValue();\r\n\r\n        var cMap = reduce(function (acc, ch, i) {\r\n            if (!(ch in acc)) {\r\n                acc[ch] = i > to.length ? '' : to[i];\r\n            }\r\n            return acc;\r\n        }, {}, from);\r\n\r\n        var t = join(\r\n            '',\r\n            map(function (ch) {\r\n                return ch in cMap ? cMap[ch] : ch;\r\n            }, value)\r\n        );\r\n\r\n        return new XString(t);\r\n    };\r\n\r\n    Functions.boolean_ = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function boolean expects (object)\");\r\n        }\r\n        return arguments[1].evaluate(c).bool();\r\n    };\r\n\r\n    Functions.not = function (c, eValue) {\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function not expects (object)\");\r\n        }\r\n        return eValue.evaluate(c).bool().not();\r\n    };\r\n\r\n    Functions.true_ = function () {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function true expects ()\");\r\n        }\r\n        return XBoolean.true_;\r\n    };\r\n\r\n    Functions.false_ = function () {\r\n        if (arguments.length != 1) {\r\n            throw new Error(\"Function false expects ()\");\r\n        }\r\n        return XBoolean.false_;\r\n    };\r\n\r\n    Functions.lang = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function lang expects (string)\");\r\n        }\r\n        var lang;\r\n        for (var n = c.contextNode; n != null && n.nodeType != 9 /*Node.DOCUMENT_NODE*/; n = n.parentNode) {\r\n            var a = n.getAttributeNS(XPath.XML_NAMESPACE_URI, \"lang\");\r\n            if (a != null) {\r\n                lang = String(a);\r\n                break;\r\n            }\r\n        }\r\n        if (lang == null) {\r\n            return XBoolean.false_;\r\n        }\r\n        var s = arguments[1].evaluate(c).stringValue();\r\n        return new XBoolean(lang.substring(0, s.length) == s\r\n            && (lang.length == s.length || lang.charAt(s.length) == '-'));\r\n    };\r\n\r\n    Functions.number = function () {\r\n        var c = arguments[0];\r\n        if (!(arguments.length == 1 || arguments.length == 2)) {\r\n            throw new Error(\"Function number expects (object?)\");\r\n        }\r\n        if (arguments.length == 1) {\r\n            return new XNumber(XNodeSet.prototype.stringForNode(c.contextNode));\r\n        }\r\n        return arguments[1].evaluate(c).number();\r\n    };\r\n\r\n    Functions.sum = function () {\r\n        var c = arguments[0];\r\n        var ns;\r\n        if (arguments.length != 2 || !Utilities.instance_of((ns = arguments[1].evaluate(c)), XNodeSet)) {\r\n            throw new Error(\"Function sum expects (node-set)\");\r\n        }\r\n        ns = ns.toUnsortedArray();\r\n        var n = 0;\r\n        for (var i = 0; i < ns.length; i++) {\r\n            n += new XNumber(XNodeSet.prototype.stringForNode(ns[i])).numberValue();\r\n        }\r\n        return new XNumber(n);\r\n    };\r\n\r\n    Functions.floor = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function floor expects (number)\");\r\n        }\r\n        return new XNumber(Math.floor(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    Functions.ceiling = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function ceiling expects (number)\");\r\n        }\r\n        return new XNumber(Math.ceil(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    Functions.round = function () {\r\n        var c = arguments[0];\r\n        if (arguments.length != 2) {\r\n            throw new Error(\"Function round expects (number)\");\r\n        }\r\n        return new XNumber(Math.round(arguments[1].evaluate(c).numberValue()));\r\n    };\r\n\r\n    // Utilities /////////////////////////////////////////////////////////////////\r\n\r\n    var Utilities = new Object();\r\n\r\n    Utilities.isAttribute = function (val) {\r\n        return val && (val.nodeType === 2 || val.ownerElement);\r\n    }\r\n\r\n    Utilities.splitQName = function (qn) {\r\n        var i = qn.indexOf(\":\");\r\n        if (i == -1) {\r\n            return [null, qn];\r\n        }\r\n        return [qn.substring(0, i), qn.substring(i + 1)];\r\n    };\r\n\r\n    Utilities.resolveQName = function (qn, nr, n, useDefault) {\r\n        var parts = Utilities.splitQName(qn);\r\n        if (parts[0] != null) {\r\n            parts[0] = nr.getNamespace(parts[0], n);\r\n        } else {\r\n            if (useDefault) {\r\n                parts[0] = nr.getNamespace(\"\", n);\r\n                if (parts[0] == null) {\r\n                    parts[0] = \"\";\r\n                }\r\n            } else {\r\n                parts[0] = \"\";\r\n            }\r\n        }\r\n        return parts;\r\n    };\r\n\r\n    Utilities.isSpace = function (c) {\r\n        return c == 0x9 || c == 0xd || c == 0xa || c == 0x20;\r\n    };\r\n\r\n    Utilities.isLetter = function (c) {\r\n        return c >= 0x0041 && c <= 0x005A ||\r\n            c >= 0x0061 && c <= 0x007A ||\r\n            c >= 0x00C0 && c <= 0x00D6 ||\r\n            c >= 0x00D8 && c <= 0x00F6 ||\r\n            c >= 0x00F8 && c <= 0x00FF ||\r\n            c >= 0x0100 && c <= 0x0131 ||\r\n            c >= 0x0134 && c <= 0x013E ||\r\n            c >= 0x0141 && c <= 0x0148 ||\r\n            c >= 0x014A && c <= 0x017E ||\r\n            c >= 0x0180 && c <= 0x01C3 ||\r\n            c >= 0x01CD && c <= 0x01F0 ||\r\n            c >= 0x01F4 && c <= 0x01F5 ||\r\n            c >= 0x01FA && c <= 0x0217 ||\r\n            c >= 0x0250 && c <= 0x02A8 ||\r\n            c >= 0x02BB && c <= 0x02C1 ||\r\n            c == 0x0386 ||\r\n            c >= 0x0388 && c <= 0x038A ||\r\n            c == 0x038C ||\r\n            c >= 0x038E && c <= 0x03A1 ||\r\n            c >= 0x03A3 && c <= 0x03CE ||\r\n            c >= 0x03D0 && c <= 0x03D6 ||\r\n            c == 0x03DA ||\r\n            c == 0x03DC ||\r\n            c == 0x03DE ||\r\n            c == 0x03E0 ||\r\n            c >= 0x03E2 && c <= 0x03F3 ||\r\n            c >= 0x0401 && c <= 0x040C ||\r\n            c >= 0x040E && c <= 0x044F ||\r\n            c >= 0x0451 && c <= 0x045C ||\r\n            c >= 0x045E && c <= 0x0481 ||\r\n            c >= 0x0490 && c <= 0x04C4 ||\r\n            c >= 0x04C7 && c <= 0x04C8 ||\r\n            c >= 0x04CB && c <= 0x04CC ||\r\n            c >= 0x04D0 && c <= 0x04EB ||\r\n            c >= 0x04EE && c <= 0x04F5 ||\r\n            c >= 0x04F8 && c <= 0x04F9 ||\r\n            c >= 0x0531 && c <= 0x0556 ||\r\n            c == 0x0559 ||\r\n            c >= 0x0561 && c <= 0x0586 ||\r\n            c >= 0x05D0 && c <= 0x05EA ||\r\n            c >= 0x05F0 && c <= 0x05F2 ||\r\n            c >= 0x0621 && c <= 0x063A ||\r\n            c >= 0x0641 && c <= 0x064A ||\r\n            c >= 0x0671 && c <= 0x06B7 ||\r\n            c >= 0x06BA && c <= 0x06BE ||\r\n            c >= 0x06C0 && c <= 0x06CE ||\r\n            c >= 0x06D0 && c <= 0x06D3 ||\r\n            c == 0x06D5 ||\r\n            c >= 0x06E5 && c <= 0x06E6 ||\r\n            c >= 0x0905 && c <= 0x0939 ||\r\n            c == 0x093D ||\r\n            c >= 0x0958 && c <= 0x0961 ||\r\n            c >= 0x0985 && c <= 0x098C ||\r\n            c >= 0x098F && c <= 0x0990 ||\r\n            c >= 0x0993 && c <= 0x09A8 ||\r\n            c >= 0x09AA && c <= 0x09B0 ||\r\n            c == 0x09B2 ||\r\n            c >= 0x09B6 && c <= 0x09B9 ||\r\n            c >= 0x09DC && c <= 0x09DD ||\r\n            c >= 0x09DF && c <= 0x09E1 ||\r\n            c >= 0x09F0 && c <= 0x09F1 ||\r\n            c >= 0x0A05 && c <= 0x0A0A ||\r\n            c >= 0x0A0F && c <= 0x0A10 ||\r\n            c >= 0x0A13 && c <= 0x0A28 ||\r\n            c >= 0x0A2A && c <= 0x0A30 ||\r\n            c >= 0x0A32 && c <= 0x0A33 ||\r\n            c >= 0x0A35 && c <= 0x0A36 ||\r\n            c >= 0x0A38 && c <= 0x0A39 ||\r\n            c >= 0x0A59 && c <= 0x0A5C ||\r\n            c == 0x0A5E ||\r\n            c >= 0x0A72 && c <= 0x0A74 ||\r\n            c >= 0x0A85 && c <= 0x0A8B ||\r\n            c == 0x0A8D ||\r\n            c >= 0x0A8F && c <= 0x0A91 ||\r\n            c >= 0x0A93 && c <= 0x0AA8 ||\r\n            c >= 0x0AAA && c <= 0x0AB0 ||\r\n            c >= 0x0AB2 && c <= 0x0AB3 ||\r\n            c >= 0x0AB5 && c <= 0x0AB9 ||\r\n            c == 0x0ABD ||\r\n            c == 0x0AE0 ||\r\n            c >= 0x0B05 && c <= 0x0B0C ||\r\n            c >= 0x0B0F && c <= 0x0B10 ||\r\n            c >= 0x0B13 && c <= 0x0B28 ||\r\n            c >= 0x0B2A && c <= 0x0B30 ||\r\n            c >= 0x0B32 && c <= 0x0B33 ||\r\n            c >= 0x0B36 && c <= 0x0B39 ||\r\n            c == 0x0B3D ||\r\n            c >= 0x0B5C && c <= 0x0B5D ||\r\n            c >= 0x0B5F && c <= 0x0B61 ||\r\n            c >= 0x0B85 && c <= 0x0B8A ||\r\n            c >= 0x0B8E && c <= 0x0B90 ||\r\n            c >= 0x0B92 && c <= 0x0B95 ||\r\n            c >= 0x0B99 && c <= 0x0B9A ||\r\n            c == 0x0B9C ||\r\n            c >= 0x0B9E && c <= 0x0B9F ||\r\n            c >= 0x0BA3 && c <= 0x0BA4 ||\r\n            c >= 0x0BA8 && c <= 0x0BAA ||\r\n            c >= 0x0BAE && c <= 0x0BB5 ||\r\n            c >= 0x0BB7 && c <= 0x0BB9 ||\r\n            c >= 0x0C05 && c <= 0x0C0C ||\r\n            c >= 0x0C0E && c <= 0x0C10 ||\r\n            c >= 0x0C12 && c <= 0x0C28 ||\r\n            c >= 0x0C2A && c <= 0x0C33 ||\r\n            c >= 0x0C35 && c <= 0x0C39 ||\r\n            c >= 0x0C60 && c <= 0x0C61 ||\r\n            c >= 0x0C85 && c <= 0x0C8C ||\r\n            c >= 0x0C8E && c <= 0x0C90 ||\r\n            c >= 0x0C92 && c <= 0x0CA8 ||\r\n            c >= 0x0CAA && c <= 0x0CB3 ||\r\n            c >= 0x0CB5 && c <= 0x0CB9 ||\r\n            c == 0x0CDE ||\r\n            c >= 0x0CE0 && c <= 0x0CE1 ||\r\n            c >= 0x0D05 && c <= 0x0D0C ||\r\n            c >= 0x0D0E && c <= 0x0D10 ||\r\n            c >= 0x0D12 && c <= 0x0D28 ||\r\n            c >= 0x0D2A && c <= 0x0D39 ||\r\n            c >= 0x0D60 && c <= 0x0D61 ||\r\n            c >= 0x0E01 && c <= 0x0E2E ||\r\n            c == 0x0E30 ||\r\n            c >= 0x0E32 && c <= 0x0E33 ||\r\n            c >= 0x0E40 && c <= 0x0E45 ||\r\n            c >= 0x0E81 && c <= 0x0E82 ||\r\n            c == 0x0E84 ||\r\n            c >= 0x0E87 && c <= 0x0E88 ||\r\n            c == 0x0E8A ||\r\n            c == 0x0E8D ||\r\n            c >= 0x0E94 && c <= 0x0E97 ||\r\n            c >= 0x0E99 && c <= 0x0E9F ||\r\n            c >= 0x0EA1 && c <= 0x0EA3 ||\r\n            c == 0x0EA5 ||\r\n            c == 0x0EA7 ||\r\n            c >= 0x0EAA && c <= 0x0EAB ||\r\n            c >= 0x0EAD && c <= 0x0EAE ||\r\n            c == 0x0EB0 ||\r\n            c >= 0x0EB2 && c <= 0x0EB3 ||\r\n            c == 0x0EBD ||\r\n            c >= 0x0EC0 && c <= 0x0EC4 ||\r\n            c >= 0x0F40 && c <= 0x0F47 ||\r\n            c >= 0x0F49 && c <= 0x0F69 ||\r\n            c >= 0x10A0 && c <= 0x10C5 ||\r\n            c >= 0x10D0 && c <= 0x10F6 ||\r\n            c == 0x1100 ||\r\n            c >= 0x1102 && c <= 0x1103 ||\r\n            c >= 0x1105 && c <= 0x1107 ||\r\n            c == 0x1109 ||\r\n            c >= 0x110B && c <= 0x110C ||\r\n            c >= 0x110E && c <= 0x1112 ||\r\n            c == 0x113C ||\r\n            c == 0x113E ||\r\n            c == 0x1140 ||\r\n            c == 0x114C ||\r\n            c == 0x114E ||\r\n            c == 0x1150 ||\r\n            c >= 0x1154 && c <= 0x1155 ||\r\n            c == 0x1159 ||\r\n            c >= 0x115F && c <= 0x1161 ||\r\n            c == 0x1163 ||\r\n            c == 0x1165 ||\r\n            c == 0x1167 ||\r\n            c == 0x1169 ||\r\n            c >= 0x116D && c <= 0x116E ||\r\n            c >= 0x1172 && c <= 0x1173 ||\r\n            c == 0x1175 ||\r\n            c == 0x119E ||\r\n            c == 0x11A8 ||\r\n            c == 0x11AB ||\r\n            c >= 0x11AE && c <= 0x11AF ||\r\n            c >= 0x11B7 && c <= 0x11B8 ||\r\n            c == 0x11BA ||\r\n            c >= 0x11BC && c <= 0x11C2 ||\r\n            c == 0x11EB ||\r\n            c == 0x11F0 ||\r\n            c == 0x11F9 ||\r\n            c >= 0x1E00 && c <= 0x1E9B ||\r\n            c >= 0x1EA0 && c <= 0x1EF9 ||\r\n            c >= 0x1F00 && c <= 0x1F15 ||\r\n            c >= 0x1F18 && c <= 0x1F1D ||\r\n            c >= 0x1F20 && c <= 0x1F45 ||\r\n            c >= 0x1F48 && c <= 0x1F4D ||\r\n            c >= 0x1F50 && c <= 0x1F57 ||\r\n            c == 0x1F59 ||\r\n            c == 0x1F5B ||\r\n            c == 0x1F5D ||\r\n            c >= 0x1F5F && c <= 0x1F7D ||\r\n            c >= 0x1F80 && c <= 0x1FB4 ||\r\n            c >= 0x1FB6 && c <= 0x1FBC ||\r\n            c == 0x1FBE ||\r\n            c >= 0x1FC2 && c <= 0x1FC4 ||\r\n            c >= 0x1FC6 && c <= 0x1FCC ||\r\n            c >= 0x1FD0 && c <= 0x1FD3 ||\r\n            c >= 0x1FD6 && c <= 0x1FDB ||\r\n            c >= 0x1FE0 && c <= 0x1FEC ||\r\n            c >= 0x1FF2 && c <= 0x1FF4 ||\r\n            c >= 0x1FF6 && c <= 0x1FFC ||\r\n            c == 0x2126 ||\r\n            c >= 0x212A && c <= 0x212B ||\r\n            c == 0x212E ||\r\n            c >= 0x2180 && c <= 0x2182 ||\r\n            c >= 0x3041 && c <= 0x3094 ||\r\n            c >= 0x30A1 && c <= 0x30FA ||\r\n            c >= 0x3105 && c <= 0x312C ||\r\n            c >= 0xAC00 && c <= 0xD7A3 ||\r\n            c >= 0x4E00 && c <= 0x9FA5 ||\r\n            c == 0x3007 ||\r\n            c >= 0x3021 && c <= 0x3029;\r\n    };\r\n\r\n    Utilities.isNCNameChar = function (c) {\r\n        return c >= 0x0030 && c <= 0x0039\r\n            || c >= 0x0660 && c <= 0x0669\r\n            || c >= 0x06F0 && c <= 0x06F9\r\n            || c >= 0x0966 && c <= 0x096F\r\n            || c >= 0x09E6 && c <= 0x09EF\r\n            || c >= 0x0A66 && c <= 0x0A6F\r\n            || c >= 0x0AE6 && c <= 0x0AEF\r\n            || c >= 0x0B66 && c <= 0x0B6F\r\n            || c >= 0x0BE7 && c <= 0x0BEF\r\n            || c >= 0x0C66 && c <= 0x0C6F\r\n            || c >= 0x0CE6 && c <= 0x0CEF\r\n            || c >= 0x0D66 && c <= 0x0D6F\r\n            || c >= 0x0E50 && c <= 0x0E59\r\n            || c >= 0x0ED0 && c <= 0x0ED9\r\n            || c >= 0x0F20 && c <= 0x0F29\r\n            || c == 0x002E\r\n            || c == 0x002D\r\n            || c == 0x005F\r\n            || Utilities.isLetter(c)\r\n            || c >= 0x0300 && c <= 0x0345\r\n            || c >= 0x0360 && c <= 0x0361\r\n            || c >= 0x0483 && c <= 0x0486\r\n            || c >= 0x0591 && c <= 0x05A1\r\n            || c >= 0x05A3 && c <= 0x05B9\r\n            || c >= 0x05BB && c <= 0x05BD\r\n            || c == 0x05BF\r\n            || c >= 0x05C1 && c <= 0x05C2\r\n            || c == 0x05C4\r\n            || c >= 0x064B && c <= 0x0652\r\n            || c == 0x0670\r\n            || c >= 0x06D6 && c <= 0x06DC\r\n            || c >= 0x06DD && c <= 0x06DF\r\n            || c >= 0x06E0 && c <= 0x06E4\r\n            || c >= 0x06E7 && c <= 0x06E8\r\n            || c >= 0x06EA && c <= 0x06ED\r\n            || c >= 0x0901 && c <= 0x0903\r\n            || c == 0x093C\r\n            || c >= 0x093E && c <= 0x094C\r\n            || c == 0x094D\r\n            || c >= 0x0951 && c <= 0x0954\r\n            || c >= 0x0962 && c <= 0x0963\r\n            || c >= 0x0981 && c <= 0x0983\r\n            || c == 0x09BC\r\n            || c == 0x09BE\r\n            || c == 0x09BF\r\n            || c >= 0x09C0 && c <= 0x09C4\r\n            || c >= 0x09C7 && c <= 0x09C8\r\n            || c >= 0x09CB && c <= 0x09CD\r\n            || c == 0x09D7\r\n            || c >= 0x09E2 && c <= 0x09E3\r\n            || c == 0x0A02\r\n            || c == 0x0A3C\r\n            || c == 0x0A3E\r\n            || c == 0x0A3F\r\n            || c >= 0x0A40 && c <= 0x0A42\r\n            || c >= 0x0A47 && c <= 0x0A48\r\n            || c >= 0x0A4B && c <= 0x0A4D\r\n            || c >= 0x0A70 && c <= 0x0A71\r\n            || c >= 0x0A81 && c <= 0x0A83\r\n            || c == 0x0ABC\r\n            || c >= 0x0ABE && c <= 0x0AC5\r\n            || c >= 0x0AC7 && c <= 0x0AC9\r\n            || c >= 0x0ACB && c <= 0x0ACD\r\n            || c >= 0x0B01 && c <= 0x0B03\r\n            || c == 0x0B3C\r\n            || c >= 0x0B3E && c <= 0x0B43\r\n            || c >= 0x0B47 && c <= 0x0B48\r\n            || c >= 0x0B4B && c <= 0x0B4D\r\n            || c >= 0x0B56 && c <= 0x0B57\r\n            || c >= 0x0B82 && c <= 0x0B83\r\n            || c >= 0x0BBE && c <= 0x0BC2\r\n            || c >= 0x0BC6 && c <= 0x0BC8\r\n            || c >= 0x0BCA && c <= 0x0BCD\r\n            || c == 0x0BD7\r\n            || c >= 0x0C01 && c <= 0x0C03\r\n            || c >= 0x0C3E && c <= 0x0C44\r\n            || c >= 0x0C46 && c <= 0x0C48\r\n            || c >= 0x0C4A && c <= 0x0C4D\r\n            || c >= 0x0C55 && c <= 0x0C56\r\n            || c >= 0x0C82 && c <= 0x0C83\r\n            || c >= 0x0CBE && c <= 0x0CC4\r\n            || c >= 0x0CC6 && c <= 0x0CC8\r\n            || c >= 0x0CCA && c <= 0x0CCD\r\n            || c >= 0x0CD5 && c <= 0x0CD6\r\n            || c >= 0x0D02 && c <= 0x0D03\r\n            || c >= 0x0D3E && c <= 0x0D43\r\n            || c >= 0x0D46 && c <= 0x0D48\r\n            || c >= 0x0D4A && c <= 0x0D4D\r\n            || c == 0x0D57\r\n            || c == 0x0E31\r\n            || c >= 0x0E34 && c <= 0x0E3A\r\n            || c >= 0x0E47 && c <= 0x0E4E\r\n            || c == 0x0EB1\r\n            || c >= 0x0EB4 && c <= 0x0EB9\r\n            || c >= 0x0EBB && c <= 0x0EBC\r\n            || c >= 0x0EC8 && c <= 0x0ECD\r\n            || c >= 0x0F18 && c <= 0x0F19\r\n            || c == 0x0F35\r\n            || c == 0x0F37\r\n            || c == 0x0F39\r\n            || c == 0x0F3E\r\n            || c == 0x0F3F\r\n            || c >= 0x0F71 && c <= 0x0F84\r\n            || c >= 0x0F86 && c <= 0x0F8B\r\n            || c >= 0x0F90 && c <= 0x0F95\r\n            || c == 0x0F97\r\n            || c >= 0x0F99 && c <= 0x0FAD\r\n            || c >= 0x0FB1 && c <= 0x0FB7\r\n            || c == 0x0FB9\r\n            || c >= 0x20D0 && c <= 0x20DC\r\n            || c == 0x20E1\r\n            || c >= 0x302A && c <= 0x302F\r\n            || c == 0x3099\r\n            || c == 0x309A\r\n            || c == 0x00B7\r\n            || c == 0x02D0\r\n            || c == 0x02D1\r\n            || c == 0x0387\r\n            || c == 0x0640\r\n            || c == 0x0E46\r\n            || c == 0x0EC6\r\n            || c == 0x3005\r\n            || c >= 0x3031 && c <= 0x3035\r\n            || c >= 0x309D && c <= 0x309E\r\n            || c >= 0x30FC && c <= 0x30FE;\r\n    };\r\n\r\n    Utilities.coalesceText = function (n) {\r\n        for (var m = n.firstChild; m != null; m = m.nextSibling) {\r\n            if (m.nodeType == 3 /*Node.TEXT_NODE*/ || m.nodeType == 4 /*Node.CDATA_SECTION_NODE*/) {\r\n                var s = m.nodeValue;\r\n                var first = m;\r\n                m = m.nextSibling;\r\n                while (m != null && (m.nodeType == 3 /*Node.TEXT_NODE*/ || m.nodeType == 4 /*Node.CDATA_SECTION_NODE*/)) {\r\n                    s += m.nodeValue;\r\n                    var del = m;\r\n                    m = m.nextSibling;\r\n                    del.parentNode.removeChild(del);\r\n                }\r\n                if (first.nodeType == 4 /*Node.CDATA_SECTION_NODE*/) {\r\n                    var p = first.parentNode;\r\n                    if (first.nextSibling == null) {\r\n                        p.removeChild(first);\r\n                        p.appendChild(p.ownerDocument.createTextNode(s));\r\n                    } else {\r\n                        var next = first.nextSibling;\r\n                        p.removeChild(first);\r\n                        p.insertBefore(p.ownerDocument.createTextNode(s), next);\r\n                    }\r\n                } else {\r\n                    first.nodeValue = s;\r\n                }\r\n                if (m == null) {\r\n                    break;\r\n                }\r\n            } else if (m.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n                Utilities.coalesceText(m);\r\n            }\r\n        }\r\n    };\r\n\r\n    Utilities.instance_of = function (o, c) {\r\n        while (o != null) {\r\n            if (o.constructor === c) {\r\n                return true;\r\n            }\r\n            if (o === Object) {\r\n                return false;\r\n            }\r\n            o = o.constructor.superclass;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    Utilities.getElementById = function (n, id) {\r\n        // Note that this does not check the DTD to check for actual\r\n        // attributes of type ID, so this may be a bit wrong.\r\n        if (n.nodeType == 1 /*Node.ELEMENT_NODE*/) {\r\n            if (n.getAttribute(\"id\") == id\r\n                || n.getAttributeNS(null, \"id\") == id) {\r\n                return n;\r\n            }\r\n        }\r\n        for (var m = n.firstChild; m != null; m = m.nextSibling) {\r\n            var res = Utilities.getElementById(m, id);\r\n            if (res != null) {\r\n                return res;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    // XPathException ////////////////////////////////////////////////////////////\r\n\r\n    var XPathException = (function () {\r\n        function getMessage(code, exception) {\r\n            var msg = exception ? \": \" + exception.toString() : \"\";\r\n            switch (code) {\r\n                case XPathException.INVALID_EXPRESSION_ERR:\r\n                    return \"Invalid expression\" + msg;\r\n                case XPathException.TYPE_ERR:\r\n                    return \"Type error\" + msg;\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function XPathException(code, error, message) {\r\n            var err = Error.call(this, getMessage(code, error) || message);\r\n\r\n            err.code = code;\r\n            err.exception = error;\r\n\r\n            return err;\r\n        }\r\n\r\n        XPathException.prototype = Object.create(Error.prototype);\r\n        XPathException.prototype.constructor = XPathException;\r\n        XPathException.superclass = Error;\r\n\r\n        XPathException.prototype.toString = function () {\r\n            return this.message;\r\n        };\r\n\r\n        XPathException.fromMessage = function (message, error) {\r\n            return new XPathException(null, error, message);\r\n        };\r\n\r\n        XPathException.INVALID_EXPRESSION_ERR = 51;\r\n        XPathException.TYPE_ERR = 52;\r\n\r\n        return XPathException;\r\n    })();\r\n\r\n    // XPathExpression ///////////////////////////////////////////////////////////\r\n\r\n    XPathExpression.prototype = {};\r\n    XPathExpression.prototype.constructor = XPathExpression;\r\n    XPathExpression.superclass = Object.prototype;\r\n\r\n    function XPathExpression(e, r, p) {\r\n        this.xpath = p.parse(e);\r\n        this.context = new XPathContext();\r\n        this.context.namespaceResolver = new XPathNSResolverWrapper(r);\r\n    }\r\n\r\n    XPathExpression.getOwnerDocument = function (n) {\r\n        return n.nodeType === 9 /*Node.DOCUMENT_NODE*/ ? n : n.ownerDocument;\r\n    }\r\n\r\n    XPathExpression.detectHtmlDom = function (n) {\r\n        if (!n) { return false; }\r\n\r\n        var doc = XPathExpression.getOwnerDocument(n);\r\n\r\n        try {\r\n            return doc.implementation.hasFeature(\"HTML\", \"2.0\");\r\n        } catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    XPathExpression.prototype.evaluate = function (n, t, res) {\r\n        this.context.expressionContextNode = n;\r\n        // backward compatibility - no reliable way to detect whether the DOM is HTML, but\r\n        // this library has been using this method up until now, so we will continue to use it\r\n        // ONLY when using an XPathExpression\r\n        this.context.caseInsensitive = XPathExpression.detectHtmlDom(n);\r\n\r\n        var result = this.xpath.evaluate(this.context);\r\n        return new XPathResult(result, t);\r\n    }\r\n\r\n    // XPathNSResolverWrapper ////////////////////////////////////////////////////\r\n\r\n    XPathNSResolverWrapper.prototype = {};\r\n    XPathNSResolverWrapper.prototype.constructor = XPathNSResolverWrapper;\r\n    XPathNSResolverWrapper.superclass = Object.prototype;\r\n\r\n    function XPathNSResolverWrapper(r) {\r\n        this.xpathNSResolver = r;\r\n    }\r\n\r\n    XPathNSResolverWrapper.prototype.getNamespace = function (prefix, n) {\r\n        if (this.xpathNSResolver == null) {\r\n            return null;\r\n        }\r\n        return this.xpathNSResolver.lookupNamespaceURI(prefix);\r\n    };\r\n\r\n    // NodeXPathNSResolver ///////////////////////////////////////////////////////\r\n\r\n    NodeXPathNSResolver.prototype = {};\r\n    NodeXPathNSResolver.prototype.constructor = NodeXPathNSResolver;\r\n    NodeXPathNSResolver.superclass = Object.prototype;\r\n\r\n    function NodeXPathNSResolver(n) {\r\n        this.node = n;\r\n        this.namespaceResolver = new NamespaceResolver();\r\n    }\r\n\r\n    NodeXPathNSResolver.prototype.lookupNamespaceURI = function (prefix) {\r\n        return this.namespaceResolver.getNamespace(prefix, this.node);\r\n    };\r\n\r\n    // XPathResult ///////////////////////////////////////////////////////////////\r\n\r\n    XPathResult.prototype = {};\r\n    XPathResult.prototype.constructor = XPathResult;\r\n    XPathResult.superclass = Object.prototype;\r\n\r\n    function XPathResult(v, t) {\r\n        if (t == XPathResult.ANY_TYPE) {\r\n            if (v.constructor === XString) {\r\n                t = XPathResult.STRING_TYPE;\r\n            } else if (v.constructor === XNumber) {\r\n                t = XPathResult.NUMBER_TYPE;\r\n            } else if (v.constructor === XBoolean) {\r\n                t = XPathResult.BOOLEAN_TYPE;\r\n            } else if (v.constructor === XNodeSet) {\r\n                t = XPathResult.UNORDERED_NODE_ITERATOR_TYPE;\r\n            }\r\n        }\r\n        this.resultType = t;\r\n        switch (t) {\r\n            case XPathResult.NUMBER_TYPE:\r\n                this.numberValue = v.numberValue();\r\n                return;\r\n            case XPathResult.STRING_TYPE:\r\n                this.stringValue = v.stringValue();\r\n                return;\r\n            case XPathResult.BOOLEAN_TYPE:\r\n                this.booleanValue = v.booleanValue();\r\n                return;\r\n            case XPathResult.ANY_UNORDERED_NODE_TYPE:\r\n            case XPathResult.FIRST_ORDERED_NODE_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.singleNodeValue = v.first();\r\n                    return;\r\n                }\r\n                break;\r\n            case XPathResult.UNORDERED_NODE_ITERATOR_TYPE:\r\n            case XPathResult.ORDERED_NODE_ITERATOR_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.invalidIteratorState = false;\r\n                    this.nodes = v.toArray();\r\n                    this.iteratorIndex = 0;\r\n                    return;\r\n                }\r\n                break;\r\n            case XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE:\r\n            case XPathResult.ORDERED_NODE_SNAPSHOT_TYPE:\r\n                if (v.constructor === XNodeSet) {\r\n                    this.nodes = v.toArray();\r\n                    this.snapshotLength = this.nodes.length;\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n        throw new XPathException(XPathException.TYPE_ERR);\r\n    };\r\n\r\n    XPathResult.prototype.iterateNext = function () {\r\n        if (this.resultType != XPathResult.UNORDERED_NODE_ITERATOR_TYPE\r\n            && this.resultType != XPathResult.ORDERED_NODE_ITERATOR_TYPE) {\r\n            throw new XPathException(XPathException.TYPE_ERR);\r\n        }\r\n        return this.nodes[this.iteratorIndex++];\r\n    };\r\n\r\n    XPathResult.prototype.snapshotItem = function (i) {\r\n        if (this.resultType != XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE\r\n            && this.resultType != XPathResult.ORDERED_NODE_SNAPSHOT_TYPE) {\r\n            throw new XPathException(XPathException.TYPE_ERR);\r\n        }\r\n        return this.nodes[i];\r\n    };\r\n\r\n    XPathResult.ANY_TYPE = 0;\r\n    XPathResult.NUMBER_TYPE = 1;\r\n    XPathResult.STRING_TYPE = 2;\r\n    XPathResult.BOOLEAN_TYPE = 3;\r\n    XPathResult.UNORDERED_NODE_ITERATOR_TYPE = 4;\r\n    XPathResult.ORDERED_NODE_ITERATOR_TYPE = 5;\r\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE = 6;\r\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE = 7;\r\n    XPathResult.ANY_UNORDERED_NODE_TYPE = 8;\r\n    XPathResult.FIRST_ORDERED_NODE_TYPE = 9;\r\n\r\n    // DOM 3 XPath support ///////////////////////////////////////////////////////\r\n\r\n    function installDOM3XPathSupport(doc, p) {\r\n        doc.createExpression = function (e, r) {\r\n            try {\r\n                return new XPathExpression(e, r, p);\r\n            } catch (e) {\r\n                throw new XPathException(XPathException.INVALID_EXPRESSION_ERR, e);\r\n            }\r\n        };\r\n        doc.createNSResolver = function (n) {\r\n            return new NodeXPathNSResolver(n);\r\n        };\r\n        doc.evaluate = function (e, cn, r, t, res) {\r\n            if (t < 0 || t > 9) {\r\n                throw { code: 0, toString: function () { return \"Request type not supported\"; } };\r\n            }\r\n            return doc.createExpression(e, r, p).evaluate(cn, t, res);\r\n        };\r\n    };\r\n\r\n    // ---------------------------------------------------------------------------\r\n\r\n    // Install DOM 3 XPath support for the current document.\r\n    try {\r\n        var shouldInstall = true;\r\n        try {\r\n            if (document.implementation\r\n                && document.implementation.hasFeature\r\n                && document.implementation.hasFeature(\"XPath\", null)) {\r\n                shouldInstall = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n        if (shouldInstall) {\r\n            installDOM3XPathSupport(document, new XPathParser());\r\n        }\r\n    } catch (e) {\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------\r\n    // exports for node.js\r\n\r\n    installDOM3XPathSupport(exports, new XPathParser());\r\n\r\n    (function () {\r\n        var parser = new XPathParser();\r\n\r\n        var defaultNSResolver = new NamespaceResolver();\r\n        var defaultFunctionResolver = new FunctionResolver();\r\n        var defaultVariableResolver = new VariableResolver();\r\n\r\n        function makeNSResolverFromFunction(func) {\r\n            return {\r\n                getNamespace: function (prefix, node) {\r\n                    var ns = func(prefix, node);\r\n\r\n                    return ns || defaultNSResolver.getNamespace(prefix, node);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeNSResolverFromObject(obj) {\r\n            return makeNSResolverFromFunction(obj.getNamespace.bind(obj));\r\n        }\r\n\r\n        function makeNSResolverFromMap(map) {\r\n            return makeNSResolverFromFunction(function (prefix) {\r\n                return map[prefix];\r\n            });\r\n        }\r\n\r\n        function makeNSResolver(resolver) {\r\n            if (resolver && typeof resolver.getNamespace === \"function\") {\r\n                return makeNSResolverFromObject(resolver);\r\n            }\r\n\r\n            if (typeof resolver === \"function\") {\r\n                return makeNSResolverFromFunction(resolver);\r\n            }\r\n\r\n            // assume prefix -> uri mapping\r\n            if (typeof resolver === \"object\") {\r\n                return makeNSResolverFromMap(resolver);\r\n            }\r\n\r\n            return defaultNSResolver;\r\n        }\r\n\r\n        /** Converts native JavaScript types to their XPath library equivalent */\r\n        function convertValue(value) {\r\n            if (value === null ||\r\n                typeof value === \"undefined\" ||\r\n                value instanceof XString ||\r\n                value instanceof XBoolean ||\r\n                value instanceof XNumber ||\r\n                value instanceof XNodeSet) {\r\n                return value;\r\n            }\r\n\r\n            switch (typeof value) {\r\n                case \"string\": return new XString(value);\r\n                case \"boolean\": return new XBoolean(value);\r\n                case \"number\": return new XNumber(value);\r\n            }\r\n\r\n            // assume node(s)\r\n            var ns = new XNodeSet();\r\n            ns.addArray([].concat(value));\r\n            return ns;\r\n        }\r\n\r\n        function makeEvaluator(func) {\r\n            return function (context) {\r\n                var args = Array.prototype.slice.call(arguments, 1).map(function (arg) {\r\n                    return arg.evaluate(context);\r\n                });\r\n                var result = func.apply(this, [].concat(context, args));\r\n                return convertValue(result);\r\n            };\r\n        }\r\n\r\n        function makeFunctionResolverFromFunction(func) {\r\n            return {\r\n                getFunction: function (name, namespace) {\r\n                    var found = func(name, namespace);\r\n                    if (found) {\r\n                        return makeEvaluator(found);\r\n                    }\r\n                    return defaultFunctionResolver.getFunction(name, namespace);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeFunctionResolverFromObject(obj) {\r\n            return makeFunctionResolverFromFunction(obj.getFunction.bind(obj));\r\n        }\r\n\r\n        function makeFunctionResolverFromMap(map) {\r\n            return makeFunctionResolverFromFunction(function (name) {\r\n                return map[name];\r\n            });\r\n        }\r\n\r\n        function makeFunctionResolver(resolver) {\r\n            if (resolver && typeof resolver.getFunction === \"function\") {\r\n                return makeFunctionResolverFromObject(resolver);\r\n            }\r\n\r\n            if (typeof resolver === \"function\") {\r\n                return makeFunctionResolverFromFunction(resolver);\r\n            }\r\n\r\n            // assume map\r\n            if (typeof resolver === \"object\") {\r\n                return makeFunctionResolverFromMap(resolver);\r\n            }\r\n\r\n            return defaultFunctionResolver;\r\n        }\r\n\r\n        function makeVariableResolverFromFunction(func) {\r\n            return {\r\n                getVariable: function (name, namespace) {\r\n                    var value = func(name, namespace);\r\n                    return convertValue(value);\r\n                }\r\n            };\r\n        }\r\n\r\n        function makeVariableResolver(resolver) {\r\n            if (resolver) {\r\n                if (typeof resolver.getVariable === \"function\") {\r\n                    return makeVariableResolverFromFunction(resolver.getVariable.bind(resolver));\r\n                }\r\n\r\n                if (typeof resolver === \"function\") {\r\n                    return makeVariableResolverFromFunction(resolver);\r\n                }\r\n\r\n                // assume map\r\n                if (typeof resolver === \"object\") {\r\n                    return makeVariableResolverFromFunction(function (name) {\r\n                        return resolver[name];\r\n                    });\r\n                }\r\n            }\r\n\r\n            return defaultVariableResolver;\r\n        }\r\n\r\n        function copyIfPresent(prop, dest, source) {\r\n            if (prop in source) { dest[prop] = source[prop]; }\r\n        }\r\n\r\n        function makeContext(options) {\r\n            var context = new XPathContext();\r\n\r\n            if (options) {\r\n                context.namespaceResolver = makeNSResolver(options.namespaces);\r\n                context.functionResolver = makeFunctionResolver(options.functions);\r\n                context.variableResolver = makeVariableResolver(options.variables);\r\n                context.expressionContextNode = options.node;\r\n                copyIfPresent('allowAnyNamespaceForNoPrefix', context, options);\r\n                copyIfPresent('isHtml', context, options);\r\n            } else {\r\n                context.namespaceResolver = defaultNSResolver;\r\n            }\r\n\r\n            return context;\r\n        }\r\n\r\n        function evaluate(parsedExpression, options) {\r\n            var context = makeContext(options);\r\n\r\n            return parsedExpression.evaluate(context);\r\n        }\r\n\r\n        var evaluatorPrototype = {\r\n            evaluate: function (options) {\r\n                return evaluate(this.expression, options);\r\n            }\r\n\r\n            , evaluateNumber: function (options) {\r\n                return this.evaluate(options).numberValue();\r\n            }\r\n\r\n            , evaluateString: function (options) {\r\n                return this.evaluate(options).stringValue();\r\n            }\r\n\r\n            , evaluateBoolean: function (options) {\r\n                return this.evaluate(options).booleanValue();\r\n            }\r\n\r\n            , evaluateNodeSet: function (options) {\r\n                return this.evaluate(options).nodeset();\r\n            }\r\n\r\n            , select: function (options) {\r\n                return this.evaluateNodeSet(options).toArray()\r\n            }\r\n\r\n            , select1: function (options) {\r\n                return this.select(options)[0];\r\n            }\r\n        };\r\n\r\n        function parse(xpath) {\r\n            var parsed = parser.parse(xpath);\r\n\r\n            return Object.create(evaluatorPrototype, {\r\n                expression: {\r\n                    value: parsed\r\n                }\r\n            });\r\n        }\r\n\r\n        exports.parse = parse;\r\n    })();\r\n\r\n    assign(\r\n        exports,\r\n        {\r\n            XPath,\r\n            XPathParser,\r\n            XPathResult,\r\n\r\n            Step,\r\n            PathExpr,\r\n            NodeTest,\r\n            LocationPath,\r\n\r\n            OrOperation,\r\n            AndOperation,\r\n\r\n            BarOperation,\r\n\r\n            EqualsOperation,\r\n            NotEqualOperation,\r\n            LessThanOperation,\r\n            GreaterThanOperation,\r\n            LessThanOrEqualOperation,\r\n            GreaterThanOrEqualOperation,\r\n\r\n            PlusOperation,\r\n            MinusOperation,\r\n            MultiplyOperation,\r\n            DivOperation,\r\n            ModOperation,\r\n            UnaryMinusOperation,\r\n\r\n            FunctionCall,\r\n            VariableReference,\r\n\r\n            XPathContext,\r\n\r\n            XNodeSet,\r\n            XBoolean,\r\n            XString,\r\n            XNumber,\r\n\r\n            NamespaceResolver,\r\n            FunctionResolver,\r\n            VariableResolver,\r\n\r\n            Utilities,\r\n        }\r\n    );\r\n\r\n    // helper\r\n    exports.select = function (e, doc, single) {\r\n        return exports.selectWithResolver(e, doc, null, single);\r\n    };\r\n\r\n    exports.useNamespaces = function (mappings) {\r\n        var resolver = {\r\n            mappings: mappings || {},\r\n            lookupNamespaceURI: function (prefix) {\r\n                return this.mappings[prefix];\r\n            }\r\n        };\r\n\r\n        return function (e, doc, single) {\r\n            return exports.selectWithResolver(e, doc, resolver, single);\r\n        };\r\n    };\r\n\r\n    exports.selectWithResolver = function (e, doc, resolver, single) {\r\n        var expression = new XPathExpression(e, resolver, new XPathParser());\r\n        var type = XPathResult.ANY_TYPE;\r\n\r\n        var result = expression.evaluate(doc, type, null);\r\n\r\n        if (result.resultType == XPathResult.STRING_TYPE) {\r\n            result = result.stringValue;\r\n        }\r\n        else if (result.resultType == XPathResult.NUMBER_TYPE) {\r\n            result = result.numberValue;\r\n        }\r\n        else if (result.resultType == XPathResult.BOOLEAN_TYPE) {\r\n            result = result.booleanValue;\r\n        }\r\n        else {\r\n            result = result.nodes;\r\n            if (single) {\r\n                result = result[0];\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    exports.select1 = function (e, doc) {\r\n        return exports.select(e, doc, true);\r\n    };\r\n\r\n    // end non-node wrapper\r\n})(xpath);\r\n", "// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport {\n  ExtensionContext,\n  commands,\n  Uri,\n  ViewColumn,\n  workspace,\n  window,\n} from 'vscode';\nimport { TailwindEditor } from './editor';\nimport { TailwindStylesEditor } from './styleEditor';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: ExtensionContext) {\n  const workspaceFolders = workspace.workspaceFolders;\n  if (!workspaceFolders) {\n    window.showErrorMessage(\"Opening files with Tailwind Editor currently requires opening a workspace\");\n    return;\n  }\n\n  // Register our custom editor providers\n  context.subscriptions.push(TailwindEditor.register(context));\n\n  // Register our views\n  context.subscriptions.push(TailwindStylesEditor.register(context));\n\n  // Register our custom commands.\n  commands.registerCommand('tailwind.editor.open', (resource?: Uri) => {\n    if (!resource) {\n      resource = window.activeTextEditor?.document.uri;\n    }\n    commands.executeCommand('vscode.openWith', resource, TailwindEditor.viewType);\n  });\n\n  commands.registerCommand('tailwind.editor.style', (resource?: Uri) => {\n    if (!resource) {\n      resource = window.activeTextEditor?.document.uri;\n    }\n    commands.executeCommand('vscode.openWith',\n      resource,\n      TailwindStylesEditor.viewType,\n      {\n        viewColumn: ViewColumn.Beside\n      },\n    );\n  });\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n", "import {\n  CancellationToken,\n  CustomTextEditorProvider,\n  ExtensionContext,\n  Disposable,\n\n  Position,\n  Range,\n  TextDocument,\n  Uri,\n  Webview,\n  WebviewPanel,\n  WorkspaceEdit,\n\n  window,\n  workspace,\n} from 'vscode';\n\nimport {\n  getNonce,\n  parseHtml,\n  select1,\n} from './util';\n\nconst SSI_REGEX = /<!--[ ]*#(include|echo)([ ]+(file|virtual|var)=\"(.+?)\")*[ ]*-->/g;\nconst enum SSIDirecive {\n  include = 'include',\n  exec = 'exec',\n  echo = 'echo',\n  config = 'config',\n};\ntype SSIParam = SSIIncludeParam | SSIExecParam | SSIEchoParam | SSIConfigParam;\nconst enum SSIIncludeParam {\n  file = 'file',\n  virtual = 'virtual',\n};\nconst enum SSIExecParam {\n  cgi = 'cgi',\n  cmd = 'cmd',\n};\nconst enum SSIEchoParam {\n  var = 'var',\n};\nconst enum SSIConfigParam {\n  timefmt = 'timefmt',\n  sizefmt = 'sizefmt',\n  errmsg = 'errmsg',\n}\n\n/**\n * Provider for Tailwind Editor.\n *\n * Tailwind Editors are used for `.html` files, which use Tailwind CSS.\n * To get started, run this extension and open an empty `.html` file in VS Code.\n *\n * This provider demonstrates:\n *\n * - Setting up the initial webview for a custom editor.\n * - Loading scripts and styles in a custom editor.\n * - Synchronizing changes between a text document and a custom editor.\n */\nexport class TailwindEditor implements CustomTextEditorProvider {\n\n  public static readonly viewType = 'tailwind.editor';\n\n  public static register(context: ExtensionContext): Disposable {\n    const provider = new TailwindEditor(context);\n    const providerRegistration = window.registerCustomEditorProvider(TailwindEditor.viewType, provider, {\n      supportsMultipleEditorsPerDocument: true,\n      webviewOptions: {\n        enableFindWidget: true,\n        retainContextWhenHidden: true,\n      }\n    });\n\n    return providerRegistration;\n  }\n\n  private rootPath: Uri;\n\n  constructor(\n    private readonly context: ExtensionContext\n  ) {\n    this.rootPath = workspace.workspaceFolders?.[0]?.uri || Uri.file(\"/\");\n   }\n\n  /**\n   * Called when our custom editor is opened.\n   *\n   *\n   */\n  public async resolveCustomTextEditor(\n    document: TextDocument,\n    webviewPanel: WebviewPanel,\n    _token: CancellationToken\n  ): Promise<void> {\n    const webview = webviewPanel.webview;\n\n    // Setup initial content for the webview\n    webview.options = {\n      enableScripts: true,\n      enableCommandUris: true,\n    };\n    // Sets up initial page.\n    const content = await this.getContent(document);\n    webview.html = this.getHtmlForWebview(webview, content);\n\n    // Hook up event handlers so that we can synchronize the webview with the text document.\n    //\n    // The text document acts as our model, so we have to sync change in the document to our\n    // editor and sync changes in the editor back to the document.\n    //\n    // Remember that a single text document can also be shared between multiple custom\n    // editors (this happens for example when you split a custom editor).\n\n    // Here, we only\n    const saveDocumentSubscription = workspace.onDidSaveTextDocument(savedDocument => {\n      if (savedDocument.uri.toString() === document.uri.toString()) {\n        this.updateWebview(webview, document);\n      }\n    });\n\n    // Make sure we get rid of the listener when our editor is closed.\n    webviewPanel.onDidDispose(() => {\n      saveDocumentSubscription.dispose();\n    });\n\n    // Receive message from the webview.\n    webview.onDidReceiveMessage(({type, payload}) => {\n      switch (type) {\n        case 'mutations':\n          this.applyMutations(document, payload);\n          break;\n      }\n    });\n  }\n\n  /**\n   * Get the static html used for the editor webviews.\n   */\n  private getHtmlForWebview(webview: Webview, body: string): string {\n    const rootPath = this.rootPath;\n    const baseUri = webview.asWebviewUri(rootPath);\n    const extensionUri = this.context.extensionUri;\n\n    // Local path to script and css for the webview\n    const scriptUri = webview.asWebviewUri(\n      Uri.joinPath(extensionUri, 'media', 'editor.mjs')\n    );\n\n    const configUri = webview.asWebviewUri(\n      Uri.joinPath(rootPath, 'examples', 'tailwind.config.js')\n    );\n\n    // Use a nonce to whitelist which scripts can be run\n    const nonce = getNonce();\n\n    return /* html */`\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\" />\n\n        <!-- Use the base Uri of the webview from workspace's root path. -->\n        <base href=\"${baseUri}/\" />\n\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n        <script src=\"https://cdn.tailwindcss.com\"></script>\n        <script src=\"${configUri}\"></script>\n        <style type=\"text/tailwindcss\">\n          @layer utilities {\n            .content-auto {\n              content-visibility: auto;\n            }\n          }\n        </style>\n\n        <title>Tailwind Editor</title>\n      </head>\n\n      <body is=\"tailwind-editor\">\n        ${body}\n        <script crossorigin src=\"https://unpkg.com/get-xpath\"></script>\n        <script crossorigin src=\"https://bundle.run/nanomorph@5.4.3\"></script>\n        <script type=\"module\" src=\"${scriptUri}\"></script>\n      </body>\n      </html>`;\n  }\n\n  /**\n   * Gets the main HTML content of the document\n   */\n  private async getContent(document: TextDocument): Promise<string> {\n    const html = document.getText();\n    let content = html;\n    // If the HTML is full document, we only want the content inside <body>\n    if (html.indexOf('<body') > -1) {\n      content = html.substring(\n        html.indexOf('<body'),\n        html.indexOf('</body>')\n      );\n      // Substring after the first closing tag on the `<body>`\n      content = content.substring(content.indexOf(\">\") + 1);\n    }\n\n    const uri = document.uri;\n    const extname = '.' + uri.path.substring(uri.path.lastIndexOf(\".\") + 1);\n\n    // We only process SSI if settings allow this extension.\n    const ssiSettings: string[] = workspace.getConfiguration('tailwind.editor').get('serverSideIncludes', ['.shtml']);\n    if (ssiSettings.indexOf(extname) === -1) {\n      return content;\n    }\n\n    const promises: Promise<string>[] = [];\n    // We can't do async replace, so we store the replacements as promises instead.\n    content.replace(SSI_REGEX, (match, directive: SSIDirecive, _, param: SSIParam, value: string) => {\n      // Only handle `include` directive for now.\n      if (directive !== SSIDirecive.include) return match;\n\n      // @TODO: handle between `file` or `virtual` param.\n\n      const includeUri = Uri.joinPath(uri, '..', value);\n      const thenable =\n        workspace.openTextDocument(includeUri)\n        .then(includedDocument => this.getContent(includedDocument))\n        .then(html => {\n          const args = [\n            includeUri\n          ];\n          const commandUri = Uri.parse(`command:tailwind.editor.open?${encodeURIComponent(JSON.stringify(args))}`);\n          return html.replace(/<([a-z-]+) /, `<$1 is=\"portal-$1\" src=\"${commandUri}\" `);\n        });\n      promises.push(Promise.resolve(thenable));\n\n      return match;\n    });\n\n    // We now await all the promises to get the list of includes.\n    const includes = await Promise.all(promises);\n\n    // One more run to replace SSI with actual include content.\n    return content.replace(SSI_REGEX, () => includes.shift() || '');\n  }\n\n  private async updateWebview(webview: Webview, document: TextDocument) {\n    const content = await this.getContent(document);\n    return webview.postMessage({\n      type: 'update',\n      content,\n    });\n  }\n\n  /**\n   * Applies a list of mutations to a text document.\n   */\n  private applyMutations(document: TextDocument, mutations: any[]):void {\n    let html = document.getText();\n    const doc = parseHtml(html);\n    const edit = new WorkspaceEdit();\n\n    mutations.forEach(mutation => {\n      const {\n        type,\n        attributeName,\n        oldValue = '',\n        newValue = '',\n        xpath,\n      } = mutation;\n\n      if (xpath === '/html/body') return;\n\n      const target = select1(xpath.replace('/html/body/', '//'), doc);\n      if (!target) return;\n\n      // Removes the namespace to avoid parser putting it on the HTML.\n      target.namespaceURI = null;\n      // Starting from the target element's position.\n      const startPosition = new Position(target.lineNumber - 1, target.columnNumber - 1);\n      // Gets the start offset in zero-based index.\n      const startOffset = document.offsetAt(startPosition);\n\n      // Retrieves the HTML of just the opening tag of the target to replace.\n      // We need to depend on the next `>` because the opening tag can span multiple lines,\n      // as well as with or without self-closing.\n      let targetHtml = html.substring(startOffset);\n      const endOffset = startOffset + targetHtml.indexOf('>') + 1;\n      const endPosition = document.positionAt(endOffset);\n\n      // Makes adjustments to the target element.\n      if (newValue) {\n        target.setAttribute(attributeName, newValue);\n      } else {\n        target.removeAttribute(attributeName);\n      }\n\n      // Retrives the target's new HTML.\n      targetHtml = target.toString();\n\n      // Only replaces the opening tag.\n      edit.replace(\n        document.uri,\n        new Range(startPosition, endPosition),\n        targetHtml.substring(0, targetHtml.indexOf('>') + 1)\n      );\n    });\n\n    workspace.applyEdit(edit);\n  }\n}\n", "import { DOMParser } from '@xmldom/xmldom';\nimport * as XPath from 'xpath';\n\nexport function getNonce() {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < 32; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}\n\nexport function parseHtml(text: string) {\n  return new DOMParser().parseFromString(text, 'text/html');\n}\n\nexport function select1(xpath: string, node: Node, options = { isHtml: true }): Element {\n  return XPath.parse(xpath).select1({\n    node,\n    ...options,\n  });\n}\n", "import {\n  CancellationToken,\n  Disposable,\n  ExtensionContext,\n  Uri,\n  CustomTextEditorProvider,\n  TextDocument,\n  Webview,\n  WebviewPanel,\n\n  commands,\n  window,\n  workspace,\n  TextDocumentContentChangeEvent,\n} from 'vscode';\n\nimport {\n  getNonce,\n} from './util';\n\ninterface Selection {\n  className: string\n}\n\n/**\n * Custom editor for styling options.\n */\nexport class TailwindStylesEditor implements CustomTextEditorProvider {\n  public static readonly viewType = 'tailwind.styles.editor';\n\n  public static register(context: ExtensionContext): Disposable {\n    const provider = new TailwindStylesEditor(context);\n    const providerRegistration = window.registerCustomEditorProvider(TailwindStylesEditor.viewType, provider, {\n      supportsMultipleEditorsPerDocument: true,\n      webviewOptions: {\n        enableFindWidget: true,\n        retainContextWhenHidden: true,\n      }\n    });\n\n    return providerRegistration;\n  }\n\n  constructor(\n\t\tprivate readonly context: ExtensionContext\n\t) { }\n\n  public async resolveCustomTextEditor(\n    document: TextDocument,\n\t\twebviewPanel: WebviewPanel,\n\t\t_token: CancellationToken,\n\t) {\n    const webview = webviewPanel.webview;\n\n    webview.options = {\n\t\t\tenableScripts: true,\n      enableCommandUris: true,\n\t\t};\n\n    const selection = {\n      className: ``,\n    };\n    const content = await this.getContent(selection);\n    webview.html = this.getHtmlForWebview(webview, content);\n\n    // Hook up event handlers so that we can synchronize the webview with the text document.\n    //\n    // The text document acts as our model, so we have to sync change in the document to our\n    // editor and sync changes in the editor back to the document.\n    //\n    // Remember that a single text document can also be shared between multiple custom\n    // editors (this happens for example when you split a custom editor).\n\n    // Here, we listens on document changes and update our webview.\n    let selectionChange;\n\n    const changeDocumentSubscription = workspace.onDidChangeTextDocument(event => {\n      const { document: changedDocument, contentChanges } = event;\n      if (!contentChanges.length) return;\n\n      if (changedDocument.uri.toString() === document.uri.toString()) {\n        selectionChange = contentChanges.find(change => change.text.indexOf('contenteditable=\"true\"'));\n        if (!selectionChange) return;\n        const text = selectionChange.text;\n        const [_, className = ''] = text.match(/class=\"([^\"]+)\"/) || [];\n        selection.className = className;\n\n        this.updateWebview(webview, selection);\n      }\n    });\n\n    // Make sure we get rid of the listener when our editor is closed.\n    webviewPanel.onDidDispose(() => {\n      changeDocumentSubscription.dispose();\n    });\n\n    webview.onDidReceiveMessage(data => {\n\n\t\t});\n  }\n\n  private getHtmlForWebview(webview: Webview, body: string): string {\n    const toolkitUri = webview.asWebviewUri(\n      Uri.joinPath(\n        this.context.extensionUri,\n        'node_modules',\n        '@vscode',\n        'webview-ui-toolkit',\n        'dist',\n        'toolkit.js',\n      )\n    );\n    const codiconsUri = webview.asWebviewUri(\n      Uri.joinPath(\n        this.context.extensionUri,\n        'node_modules',\n        '@vscode/codicons',\n        'dist',\n        'codicon.css',\n      )\n    );\n\n    // Use a nonce to only allow a specific script to be run.\n\t\tconst nonce = getNonce();\n\n    return /* html */`\n      <!DOCTYPE html>\n\t\t\t<html lang=\"en\">\n\t\t\t<head>\n\t\t\t\t<meta charset=\"UTF-8\">\n\t\t\t\t<!--\n\t\t\t\t\tUse a content security policy to only allow loading images from https or from our extension directory,\n\t\t\t\t\tand only allow scripts that have a specific nonce.\n\t\t\t\t-->\n\t\t\t\t<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; font-src ${webview.cspSource}; style-src ${webview.cspSource} 'unsafe-inline'; script-src 'unsafe-eval' 'nonce-${nonce}';\">\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n        <link href=\"${codiconsUri}\" rel=\"stylesheet\" />\n\n        <script nonce=\"${nonce}\" src=\"//unpkg.com/alpinejs\" defer=\"\"></script>\n        <script nonce=\"${nonce}\" type=\"module\" src=\"${toolkitUri}\"></script>\n        <script nonce=\"${nonce}\" src=\"https://cdn.tailwindcss.com\"></script>\n\n\t\t\t\t<title>Tailwind Editor View</title>\n\t\t\t</head>\n\t\t\t<body>\n        ${body}\n\n        <script nonce=\"${nonce}\">\n          console.log(Object.assign({}, tailwind))\n        </script>\n\t\t\t</body>\n\t\t\t</html>`;\n  }\n\n  private async getContent(selection: Selection): Promise<string> {\n    const classList: string[] = selection.className.split(' ').filter(c => c);\n\n    return `<main x-data=\"tailwind\">\n      ${this.getPanel(\"Layout\", `\n        <vscode-radio-group class=\"flex flex-row\">\n          <label slot=\"label\" class=\"mr-4\">Display</label>\n          <vscode-radio>Block</vscode-radio>\n          <vscode-radio>Flex</vscode-radio>\n          <vscode-radio>Grid</vscode-radio>\n          <vscode-radio>Inline Block</vscode-radio>\n          <vscode-radio>Inline</vscode-radio>\n          <vscode-radio>None</vscode-radio>\n        </vscode-radio-group>\n      `)}\n\n      ${this.getPanel(\"Spacing\", `\n        <div class=\"grid border border-dashed\">\n          <label class=\"col-start-1 col-end-6 row-start-1 row-end-2 flex flex-col justify-center items-center p-2 bg-[color:var(--vscode-foreground)]\">\n            <input size=\"1\" value=\"0\" class=\"text-center\" />\n          </label>\n          <label class=\"col-start-5 col-end-6 row-start-1 row-end-6 flex flex-col justify-center items-center p-2 bg-[color:var(--vscode-foreground)]\">\n            <input size=\"1\" value=\"0\" class=\"text-center\" />\n          </label>\n          <label class=\"col-start-1 col-end-6 row-start-5 row-end-6 flex flex-col justify-center items-center p-2 bg-[color:var(--vscode-foreground)]\">\n            <input size=\"1\" value=\"0\" class=\"text-center\" />\n          </label>\n          <label class=\"col-start-1 col-end-2 row-start-1 row-end-6 flex flex-col justify-center items-center p-2 bg-[color:var(--vscode-foreground)]\">\n            <input size=\"1\" value=\"0\" class=\"text-center\" />\n          </label>\n\n          <label class=\"col-start-2 col-end-5 row-start-2 row-end-3 flex flex-col justify-center items-center p-2\">\n            <input size=\"1\" value=\"0\" class=\"text-center\" />\n          </label>\n          <label class=\"col-start-4 col-end-5 row-start-2 row-end-5 flex flex-col justify-center items-center p-2\">\n            <input size=\"1\" value=\"0\" class=\"text-center\" />\n          </label>\n          <label class=\"col-start-2 col-end-5 row-start-4 row-end-5 flex flex-col justify-center items-center p-2\">\n            <input size=\"1\" value=\"0\" class=\"text-center\" />\n          </label>\n          <label class=\"col-start-2 col-end-3 row-start-2 row-end-5 flex flex-col justify-center items-center p-2\">\n            <input size=\"1\" value=\"0\" class=\"text-center\" />\n          </label>\n\n          <div class=\"col-start-3 col-end-4 row-start-3 row-end-4 flex flex-col justify-center items-center p-2 border-2\">\n\n          </div>\n        </div>\n      `)}\n\n      ${this.getPanel(\"Sizing\", `\n        <vscode-text-field type=\"text\">Width</vscode-text-field>\n        <vscode-text-field type=\"text\">Height</vscode-text-field>\n        <vscode-text-field type=\"text\">Min W</vscode-text-field>\n        <vscode-text-field type=\"text\">Min H</vscode-text-field>\n        <vscode-text-field type=\"text\">Max W</vscode-text-field>\n        <vscode-text-field type=\"text\">Max H</vscode-text-field>\n      `)}\n\n      ${this.getPanel(\"Position\", `\n        <vscode-dropdown>\n          <vscode-option>Static</vscode-option>\n          <vscode-option>Relative</vscode-option>\n          <vscode-option>Absolute</vscode-option>\n          <vscode-option>Fixed</vscode-option>\n          <vscode-option>Sticky</vscode-option>\n        </vscode-dropdown>\n\n        <vscode-radio-group>\n          <label slot=\"label\">Float</label>\n          <vscode-radio>None</vscode-radio>\n          <vscode-radio>Left</vscode-radio>\n          <vscode-radio>Right</vscode-radio>\n        </vscode-radio-group>\n\n        <vscode-radio-group>\n          <label slot=\"label\">Clear</label>\n          <vscode-radio>None</vscode-radio>\n          <vscode-radio>Left</vscode-radio>\n          <vscode-radio>Right</vscode-radio>\n          <vscode-radio>Both</vscode-radio>\n        </vscode-radio-group>\n      `)}\n\n      ${this.getPanel(\"Typography\", `\n        <div class=\"grid grid-cols-2 gap-4\">\n          <label class=\"col-span-2 flex items-center\">\n            <span class=\"w-[7ch]\">Font</span>\n            <vscode-dropdown class=\"flex-1\">\n              <template x-for=\"family in Object.entries(defaultConfig.theme.fontFamily)\">\n                <vscode-option x-text=\"family[1].join(', ')\" x-bind:value=\"'font-' + family[0]\"></vscode-option>\n              </template>\n            </vscode-dropdown>\n          </label>\n\n          <label class=\"col-span-2 flex items-center\">\n            <span class=\"w-[7ch]\">Weight</span>\n            <vscode-dropdown class=\"flex-1\">\n              <template x-for=\"weight in Object.entries(defaultConfig.theme.fontWeight)\">\n                <vscode-option x-text=\"weight.reverse().join(' - ')\" x-bind:value=\"'font-' + weight[1]\"></vscode-option>\n              </template>\n            </vscode-dropdown>\n          </label>\n\n          <label class=\"flex items-center\">\n            <span class=\"w-[7ch]\">Size</span>\n            <vscode-text-field type=\"text\" class=\"flex-1\"></vscode-text-field>\n          </label>\n\n          <label class=\"flex items-center\">\n            <span class=\"w-[7ch]\">Height</span>\n            <vscode-text-field type=\"text\" class=\"flex-1\"></vscode-text-field>\n          </label>\n\n          <label class=\"col-span-2 flex items-center\">\n            <span class=\"w-[7ch]\">Color</span>\n            <vscode-dropdown class=\"flex-1\">\n              <template x-for=\"color in Object.entries(colors)\">\n                <vscode-option x-text=\"color\"></vscode-option>\n              </template>\n            </vscode-dropdown>\n\n            <vscode-text-field type=\"color\" list=\"tailwind-colors\" class=\"flex-1\"></vscode-text-field>\n            <datalist id=\"tailwind-colors\">\n              <template x-for=\"color in Object.entries(colors)\">\n                <option x-text=\"color\"></option>\n              </template>\n            </datalist>\n          </label>\n        </div>\n      `)}\n\n      ${this.getPanel(\"Backgrounds\", ``)}\n\n      ${this.getPanel(\"Borders\", ``)}\n\n      ${this.getPanel(\"Effects\", ``)}\n\n      ${this.getPanel(\"Filters\", ``)}\n    </main>`;\n  }\n\n  private getPanel(title: string, content: string): string {\n    return `<details open=\"\" class=\"group open:mb-4\">\n      <summary\n        class=\"\n          flex items-center\n          -mx-5 p-1\n          font-bold uppercase\n\n          border-t border-t-[color:var(--vscode-sideBarSectionHeader-border)]\n          group-first-of-type:border-t-transparent\n\n          cursor-pointer\n          marker:content-none\n\n          group-open:mb-2\n        \"\n      >\n        <i\n          class=\"\n            codicon codicon-chevron-right\n            transition\n            group-open:rotate-90\n          \"\n        ></i> ${title}\n      </summary>\n\n      ${content}\n    </details>`;\n  }\n\n  private async updateWebview(webview: Webview, selection: Selection) {\n    const content = await this.getContent(selection);\n    return webview.postMessage({\n      type: 'update',\n      content,\n    });\n  }\n}\n"],
  "mappings": "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KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SAAU,KAAK,SACpB,KAAK,SACL,KAAK,SAAU,KAAK;AAAA;AAG5B,gBAAU,eAAe,SAAU,GAAG;AAClC,eAAO,KAAK,MAAU,KAAK,MACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,MACL,KAAK,MACL,KAAK,MACL,UAAU,SAAS,MACnB,KAAK,OAAU,KAAK,OACpB,KAAK,OAAU,KAAK,OACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QACL,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAAK,QAAU,KAAK,QACpB,KAA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",
  "names": []
}
